#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass IEEEtran
\begin_preamble
\usepackage{fixltx2e}
\usepackage[noadjust]{cite}
%\usepackage[breaklinks=true,colorlinks=true,linkcolor=black,citecolor=black,urlcolor=black]{hyperref}
\usepackage{url}
\usepackage{balance}
\usepackage{textcomp}
%\usepackage{txfonts}

% against orphans/widows
\widowpenalty=10000
\clubpenalty=10000
\raggedbottom

% against overful hboxes
\sloppy

\usepackage{color}
\definecolor{lightgray}{gray}{0.95}

\usepackage[parfill]{parskip}

\usepackage{changepage}


\usepackage{lastpage}

% Change the \footnoterule command to separate footnotes from 
% the main text by a short horizontal rule (borrowed
% from the CAIA style)
\renewcommand{\footnoterule}
{
  \kern-3\p@
  \hrule\@width.4\columnwidth
  \kern2.6\p@
}

%% Mimic CAIA TR use of hyperlinks

% The "xcolor" package allows us to define the colours we will use for links   %
% within the PDF when we later load the "hyperref" package.                    %

\RequirePackage{xcolor}
\xdefinecolor{linkc}{RGB}{33,0,99}
\xdefinecolor{citec}{RGB}{0,0,0}
\xdefinecolor{caiablack}{RGB}{0,0,0}
\xdefinecolor{urlc}{RGB}{33,0,99}

% The "hyperref" package allows us to generate a PDF with associated PDF links %
% and bookmarks and other funky PDF stuff.                                     %

\RequirePackage[colorlinks=true,                  % Links are marked as coloured text, not coloured box.
                linkcolor= linkc,                 % Colour of in-document links (e.g. in the table of contents).
                citecolor= caiablack,             % Colour of bibliographic citations.
                urlcolor= urlc,                   % Colour of hyperlinks to the Net.
                pdfpagelayout=SinglePage,         % Initial view is page-by-page
                pdfstartview=FitV,                % Fit the document to window height.
               ]{hyperref}
\end_preamble
\options 11pt, a4paper, conference
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding default
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement tbh
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_package amsmath 0
\use_package amssymb 0
\use_package cancel 1
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 2
\papersides 1
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
title{TEACUP v1.0 -- Data Analysis Functions}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
author{
\backslash
IEEEauthorblockN{Sebastian Zander, Grenville Armitage}
\end_layout

\begin_layout Plain Layout


\backslash
IEEEauthorblockA{Centre for Advanced Internet Architectures
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

Swinburne University of Technology
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

Melbourne, Australia
\backslash

\backslash

\end_layout

\begin_layout Plain Layout


\backslash
url{szander@swin.edu.au}, 
\backslash
url{garmitage@swin.edu.au}}}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%This is how to make the abstract/index one column
\end_layout

\begin_layout Plain Layout


\backslash
IEEEoverridecommandlockouts
\end_layout

\begin_layout Plain Layout


\backslash
IEEEaftertitletext{
\backslash
vspace{-0.5
\backslash
baselineskip}
\end_layout

\begin_layout Plain Layout


\backslash
begin{adjustwidth*}{2.5cm}{2.5cm}
\end_layout

\begin_layout Plain Layout


\backslash
noindent
\backslash
begin{abstract} Over the last few decades several TCP congestion control
 algorithms were developed in order to optimise TCP's behaviour in certain
 situations.
 While TCP was traditionally used mainly for file transfers, more recently
 it is also becoming the protocol of choice for streaming applications,
 for example video streaming from YouTube and Netflix is TCP-based 
\backslash
cite{Finamore2011,Rao2011} and there is an ISO standard for Dynamic Adaptive
 Streaming over HTTP (DASH) 
\backslash
cite{dash-standard}.
 However, the impact of different TCP congestion control algorithms on TCP-based
 streaming flows (within a mix of other typical traffic) is not well understood.
 Experiments in a controlled testbed allow shedding more light on this issue.
 TEACUP (TCP Experiment Automation Controlled Using Python) version 1.0 is
 a software tool for running automated TCP experiments in a testbed 
\backslash
cite{zander2015caia_teacup_v1.0}.
 This report describes the analysis functions TEACUP provides to extract
 statistics and plot graphs based on data collected during the experiments.
 
\end_layout

\begin_layout Plain Layout


\backslash
end{abstract} 
\end_layout

\begin_layout Plain Layout


\backslash
vspace{0.5
\backslash
baselineskip}
\end_layout

\begin_layout Plain Layout


\backslash
noindent
\backslash
begin{keywords} TCP, experiments, automated control, data analysis 
\end_layout

\begin_layout Plain Layout


\backslash
end{keywords} 
\end_layout

\begin_layout Plain Layout


\backslash
end{adjustwidth*}
\end_layout

\begin_layout Plain Layout


\backslash
vspace{1
\backslash
baselineskip}}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
maketitle
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fancypagestyle{firstpage}{% Page style for first page
\end_layout

\begin_layout Plain Layout

  
\backslash
fancyhf{}% Clear header/footer
\end_layout

\begin_layout Plain Layout

  
\backslash
renewcommand{
\backslash
headrulewidth}{0pt}% Header rule
\end_layout

\begin_layout Plain Layout

  
\backslash
renewcommand{
\backslash
footrulewidth}{0pt}% Footer rule
\end_layout

\begin_layout Plain Layout

  
\backslash
fancyfoot[C]{
\backslash
small{
\backslash
copyright~2015 -- 2016 CAIA, Swinburne University of Technology
\backslash

\backslash
Originally published as 
\backslash
url{http://caia.swin.edu.au/reports/150529B/CAIA-TR-150529B.pdf}
\backslash

\backslash
This version released June 2016 under Creative Commons BY-SA 4.0 License
 -- see terms on page~
\backslash
pageref{sec:Copying}}}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout


\backslash
thispagestyle{firstpage}
\end_layout

\begin_layout Plain Layout

  
\backslash
pagestyle{fancy}
\end_layout

\begin_layout Plain Layout

  
\backslash
headheight 13.4pt
\end_layout

\begin_layout Plain Layout

  
\backslash
renewcommand{
\backslash
headrulewidth}{0pt}
\end_layout

\begin_layout Plain Layout

  
\backslash
lfoot{
\backslash
small{TEACUP v1.0 -- Data Analysis Functions}}
\end_layout

\begin_layout Plain Layout

  
\backslash
cfoot{}
\end_layout

\begin_layout Plain Layout

  
\backslash
rfoot{
\backslash
small{June 9, 2016~~page 
\backslash
thepage ~of 
\backslash
pageref{LastPage}}} 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
pdfbookmark{
\backslash
contentsname}{toc}
\end_layout

\begin_layout Plain Layout


\backslash
addtocontents{toc}{
\backslash
protect{
\backslash
pdfbookmark[0]{
\backslash
contentsname}{ToC}}}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
Over the last few decades several TCP congestion control algorithms were
 developed in order to optimise TCP's behaviour in certain situations.
 While TCP was traditionally used mainly for file transfers, more recently
 it is also becoming the protocol of choice for streaming applications,
 for example video streaming from YouTube and Netflix is TCP-based 
\begin_inset CommandInset citation
LatexCommand cite
key "Finamore2011,Rao2011"

\end_inset

 and there is an ISO standard for Dynamic Adaptive Streaming over HTTP (DASH)
 
\begin_inset CommandInset citation
LatexCommand cite
key "dash-standard"

\end_inset

.
 However, the impact of different TCP congestion control algorithms on TCP-based
 streaming flows (within a mix of other typical traffic) is not well understood.
 Experiments in a controlled testbed allow shedding more light on this issue.
 
\end_layout

\begin_layout Standard
This report describes the data analysis functionality of TEACUP (TCP Experiment
 Automation Controlled Using Python) version 1.0 -- a software tool for running
 automated TCP experiments in a testbed 
\begin_inset CommandInset citation
LatexCommand cite
key "zander2015caia_teacup_v1.0"

\end_inset

.
 The TEACUP project originated at Swinburne University of Technology's Centre
 for Advanced Internet Architectures (
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://caia.swin.edu.au/tools/teacup
\end_layout

\end_inset

), and from version 1.0 the source code is freely available on SourceForge
 at 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://sourceforge.net/projects/teacup
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Based on a configuration file TEACUP can perform a series of experiments
 with different traffic mixes, different bottlenecks (such as bandwidths,
 queue mechanisms), different emulated network delays and/or loss rates,
 and different host settings (e.g.
 TCP congestion control algorithm) 
\begin_inset CommandInset citation
LatexCommand cite
key "zander2015caia_teacup_v1.0"

\end_inset

.
 For each experiment TEACUP automatically collects relevant information
 that allows analysing TCP behaviour.
 Here we describe the various tools provided by TEACUP for extracting and
 analysing the data of an experiment or a series of experiments.
 
\end_layout

\begin_layout Standard
This report is organised as follows.
 Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Overview"

\end_inset

 provides an overview of TEACUP's architecture for data extraction and analysis.
 Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Data_extraction"

\end_inset

 describes the data extraction functions of TEACUP.
 Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Data_analysis"

\end_inset

 describes the data analysis and plotting functions of TEACUP.
 Sections 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:customising_plotting"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Utility"

\end_inset

 describe customisation of plotting and additional analysis-related utility
 functions respectively.
 Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Examples"

\end_inset

 describes use cases in tutorial-style that demonstrate how to use various
 analysis tasks.
 Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Conclusions"

\end_inset

 concludes and outlines future work.
\end_layout

\begin_layout Section
Overview
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sec:Overview"

\end_inset


\end_layout

\begin_layout Standard
This section provides an overview of TEACUP's architecture for data extraction
 and analysis including some information on how to modify or extend it.
 It also provides some information on implementation details that are common
 to all extract and analysis functions.
\end_layout

\begin_layout Subsection
Architecture
\end_layout

\begin_layout Standard
TEACUP's extract and analysis functions are implemented as Fabric tasks
 
\begin_inset CommandInset citation
LatexCommand cite
key "zander2015caia_teacup_v1.0"

\end_inset

.
\end_layout

\begin_layout Standard
The architecture of TEACUP's analysis part is relatively straight-forward.
 At the lowest layer TEACUP uses extract tasks to extract statistics from
 the data collected during experiments and store these in interim data files.
 The extract tasks can be invoked by end-users directly to extract data,
 but they are also called by higher-layer analyse tasks, invoked by the
 user, that generate graphs based on the extracted data.
 TEACUP's analyse tasks pre-process the data for plotting, but the actual
 graph generation is carried out by R functions.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:TEACUP_analysis_architecture"

\end_inset

 depicts this architecture.
 As the figure indicates there is not a one-to-one relationship between
 analysis and extract tasks, as some analysis tasks may run multiple extract
 tasks.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement t
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/analysis_arch.pdf
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:TEACUP_analysis_architecture"

\end_inset

TEACUP's data extraction and analysis architecture
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Extract tasks generate files with interim data and pass the names of these
 files to an analyse task if called from that analysis task.
 The analysis task will do further processing and eventually pass (a subset)
 of the files together with other parameters to the plot function.
\end_layout

\begin_layout Standard
TEACUP cleanly separates the Python pre-processing and R plotting code with
 a well-defined interface between the the two parts.
 As Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:TEACUP_analysis_architecture"

\end_inset

 indicates, information regarding the data to be plotted is passed using
 environment variables, so TEACUP's existing plotting functions can be replaced
 by alternative user-supplied plotting functions implemented in any convenient
 language or tool.
\end_layout

\begin_layout Subsection
Experiment configuration information
\end_layout

\begin_layout Standard
For experiments carried out with TEACUP prior to version 0.9, the config.py
 file used when extract or analysis tasks are executed must be the file
 used to run the experiments (as far as the testbed configuration is concerned)
 or the config file used to run the experiments must be specified with --set
 teacup_config (see technical report 
\begin_inset CommandInset citation
LatexCommand cite
key "zander2015caia_teacup_v1.0"

\end_inset

 on how to load user-specified config files).
 
\end_layout

\begin_layout Standard
Since version 0.9 TEACUP stores all config variables for a series of experiments
 in a file <test_id_pfx>_varying_params.log.gz located in the experiment series
 sub-directory (see technical report 
\begin_inset CommandInset citation
LatexCommand cite
key "zander2015caia_teacup_v1.0"

\end_inset

).
 Extract and analysis functions will access this file and the config file
 used to run the experiments is not required anymore when running analysis
 tasks.
\end_layout

\begin_layout Subsection
Modifying or replacing analysis functionality
\end_layout

\begin_layout Standard
The data extraction and analysis aspect of TEACUP is quite distinct from
 the tasks that actually run experiments and gather testbed data.
 Instead of using TEACUP's analysis functions, end-users may want to develop
 their own data analysis and graphing tools.
 However, TEACUP also provides some options to customise the behaviour of
 its analysis functions, so users may find it easier to modify or extend
 the existing functions instead.
 For example, Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:customising_plotting"

\end_inset

 describes how to customise the plotting by (1) manipulating the environment
 variables passed to the plot script and (2) replacing the default plot
 scrips with customised scripts.
\end_layout

\begin_layout Subsection
Interim data file names
\end_layout

\begin_layout Standard
Interim data files are named as follows.
 The first part of the file name is the experiment ID, which allows to link
 the interim data file to the experiment it was generated from.
 Then for extract and analysis task that process per-flow data, the next
 part of the file name is of the form 
\family typewriter
\size small
<src_ip>_<src_port>_<dst_ip>_<dst_port>
\family default
\size default
, where <src_ip> is the source IP address, <src_port> is the source port,
 <dst_ip> is the destination IP address and <dst_port> is the destination
 port.
 The last part of the file name is an extension that indicates the type
 of data a file contains.
 The extension is specific to the extract function.
 Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Data_extraction"

\end_inset

 describes the extension names in more detail.
 Listing 
\begin_inset CommandInset ref
LatexCommand ref
reference "lis:Example-interim-file"

\end_inset

 shows an example interim data file name.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily},captionpos=b,float={*t}"
inline false
status open

\begin_layout Plain Layout

20150218-135735_experiment_aqm_pfifo_responders_4_172.16.10.60_50001_172.16.11.61_80.rt
imes
\end_layout

\begin_layout Plain Layout

\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "lis:Example-interim-file"

\end_inset

Example interim data file name
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Directory caching
\end_layout

\begin_layout Standard
Most of TEACUP's extract and analyse tasks make use of the 
\family typewriter
\size footnotesize
find
\family default
\size default
 command line tool to locate experiment data files or intermediate data
 files used for plotting.
 The root directory for find is the directory in which the task is run (or
 in other words the fabfile.py directory).
 In case there are many experiment series' stored in sub directories under
 this directory the find process will be slow.
 
\end_layout

\begin_layout Standard
To speed up the extraction and analysis, since version 0.9 TEACUP uses a
 directory cache, which stores a map of test ID prefixes and their associated
 sub directories.
 If there is a cache entry for the test ID of a particular file that TEACUP
 is trying to locate, then the search will only be carried out under the
 cached sub directory.
 The cache file is named teacup_dir_cache.txt and is stored in the directory
 where fabfile.py is located.
 
\end_layout

\begin_layout Standard
Note that if experiment data files or intermediate data files are moved
 to different locations, the user must manually update existing entries
 in teacup_dir_cache.txt or simply remove the cache file.
 In the latter case TEACUP will rebuild the cache based on the user's future
 extract or analyse commands.
\end_layout

\begin_layout Subsection
Flow caching
\end_layout

\begin_layout Standard
Many of TEACUP's extract and analysis functions work on a per-flow basis.
 They first extract the 5-tuples (source IP address, source port, destination
 IP address, destination port, protocol) of the different flows that occurred
 during experiments.
 Then, they extract the per-flow data.
\end_layout

\begin_layout Standard
To speed up the extraction and analysis, since version 0.9 TEACUP uses a
 flow cache, which stores a map of file names (including the path relative
 to the directory in which fabfile is located) and their associated flow
 tuples.
 If a cache entry is present for a file, TEACUP will use the flow tuples
 from the cache as basis for the analysis.
 If there is no cache entry, TEACUP will extract the flow tuples from the
 file (e.g.
 tcpdump file) and create a new cache entry.
 The cache file is teacup_flow_cache.txt and is stored in the directory where
 fabfile.py is located.
\end_layout

\begin_layout Standard
Note that if experiment data files are moved to different locations, the
 user must manually update existing entries in teacup_flow_cache.txt or simply
 remove the cache file.
 In the latter case TEACUP will rebuild the cache based on the user's future
 extract or analyse commands.
\end_layout

\begin_layout Section
Data Extraction
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sec:Data_extraction"

\end_inset


\end_layout

\begin_layout Standard
TEACUP provides a number of basic extract tasks for extracting data to be
 plotted from the data collected during the experiments.
 Here we describe the extract tasks, their parameters and their output.
 The extracted data is used by the analysis tasks described in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Data_analysis"

\end_inset

.
 Note that analysis tasks automatically call relevant extract tasks to extract
 the data needed for plotting.
 However, the extract tasks can be executed directly by an end-user who
 wishes to only extract data but not plot graph(s).
\end_layout

\begin_layout Standard
First, we provide an overview of all extract tasks and describe common parameter
s for all extract tasks (which can also be passed to analysis tasks).
 Then we describe the different extract tasks and their task-specific parameters
 (if any).
\end_layout

\begin_layout Subsection
Extract tasks overview
\end_layout

\begin_layout Standard
Currently extract tasks exist for:
\end_layout

\begin_layout Enumerate
Extracting the packet size data for throughput plots from tcpdump data (extract_
pktsizes);
\end_layout

\begin_layout Enumerate
Extracting Round Trip Time (RTT) using SPP 
\begin_inset CommandInset citation
LatexCommand cite
key "zander13minimally,sppweb"

\end_inset

 based on tcpdump data (extract_rtt);
\end_layout

\begin_layout Enumerate
Extracting the TCP congestion window size (CWND) from SIFTR and Web10G data
 (extract_cwnd);
\end_layout

\begin_layout Enumerate
Extracting TCP's RTT estimate from SIFTR and Web10G data (extract_tcp_rtt).
 The task extracts both, the smoothed estimate and an unsmoothed estimate
 (for SIFTR the unsmoothed estimate is the improved ERTT 
\begin_inset CommandInset citation
LatexCommand cite
key "CAIA-TR-100219A"

\end_inset

 estimate);
\end_layout

\begin_layout Enumerate
Extract arbitrary TCP statistics from SIFTR and Web10G data (extract_tcp_stat);
\end_layout

\begin_layout Enumerate
Extracting cumulative bytes acknowledged or dupACKs over time from tcpdump
 data (extracting_ackseq);
\end_layout

\begin_layout Enumerate
Extracting the goodput for DASH-like streaming clients (extract_dash_goodput);
\end_layout

\begin_layout Enumerate
Extracting the response times for incast experiments from httperf log files
 (extract_incast);
\end_layout

\begin_layout Enumerate
Extracting the response times for incast experiments from tcpdump files
 (extract_incast_restimes);
\end_layout

\begin_layout Enumerate
Extrating the inter-query times for incast experiments from tcpdump files
 (extract_incast_iqtimes).
\end_layout

\begin_layout Subsection
Common parameters
\end_layout

\begin_layout Standard
This section describes the common parameter.
 Most of these are supported by all extract tasks, but some of them are
 only supported by a subset of tasks.
\end_layout

\begin_layout Subsubsection
Specifying experiments to process
\end_layout

\begin_layout Standard
The 
\family typewriter
\size small
test_id
\family default
\size default
 parameter specifies the ID of the experiment from which to extract data.
 The 
\family typewriter
\size small
test_id
\family default
\size default
 parameter accepts multiple test IDs separated by semicolons.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Since TEACUP v0.5.
 No trailing semicolon for only one test ID.
\end_layout

\end_inset

 If a list is specified, data will be extracted for each test ID.
 Extracted data is stored in files that start with the experiment ID and
 have a task-specific extension.
\end_layout

\begin_layout Subsubsection
Replot only
\end_layout

\begin_layout Standard
All extract tasks have a parameter 
\family typewriter
\size footnotesize
replot_only
\family default
\size default
.
 While the parameter can be used when executing an extract task, it is mainly
 used for analysis tasks and passed on to the underlying extract tasks.
 This parameter allows to replot the graphs without extracting the data
 again (e.g.
 from tcpdump, SIFTR or Web10G files).
 If 
\family typewriter
\size small
replot_only
\family default
\size default
 is set to `1' data is still extracted for experiments where data has not
 been extracted before, but for experiments with already extracted data
 the graph(s) are created based on the existing extracted data.
\end_layout

\begin_layout Subsubsection
Data output directory
\end_layout

\begin_layout Standard
By default all extracted data files are generated in the sub directory where
 the experiment data is located (the sub directory name being the test ID
 prefix) inside the directory where fab is executed.
 To put the output files into a specific directory, the 
\family typewriter
\size footnotesize
out_dir
\family default
\size default
 parameter can be used.
 If 
\family typewriter
\size footnotesize
out_dir
\family default
\size default
 is an absolute path, the output files will be put in the specified directory.
 However, if 
\family typewriter
\size footnotesize
out_dir
\family default
\size default
 is a relative path, it is treated as relative 
\emph on
to the location of the log files
\emph default
 when determining the directory for the output files.
\end_layout

\begin_layout Subsubsection
Clock offset analysis and correction
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sub:clock-offset-analysis"

\end_inset


\end_layout

\begin_layout Standard
TEACUP provides an additional mechanism to evaluate the quality of the time
 synchronisation between hosts and (optionally) correct for clock offsets
 in the post-analysis.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
 Since TEACUP version 0.7.
\end_layout

\end_inset

 This mechanism requires that broadcast/multicast pings were enabled for
 an experiment (with TPCONF_bc_ping_enable=`1') as described in Section
 IV-I in technical report 
\begin_inset CommandInset citation
LatexCommand cite
key "zander2015caia_teacup_v1.0"

\end_inset

, 
\end_layout

\begin_layout Paragraph
Computing clock offsets
\end_layout

\begin_layout Standard
The get_clock_offsets tasks allows computing the clock offsets between all
 hosts using the clock of one host as reference (by default the router's
 clock).
 The task will generate a file for each experiment in experiments_completed.txt
 by default, for a specific experiment if the 
\family typewriter
\size small
test_id
\family default
\size default
 parameter is specified, or for a number of experiments listed in a file
 specified with the 
\family typewriter
\size small
exp_list
\family default
\size default
 parameter.
 
\end_layout

\begin_layout Standard
The 
\family typewriter
\size small
baseline_host
\family default
\size default
 parameter can be used to specify the reference clock and the 
\family typewriter
\size small
out_dir
\family default
\size default
 parameter specifies the directory in which the clock offset file is generated.
 Assuming <test_id> is the experiment ID, the name of the clock offsets
 file is <test_id>_clock_offsets.txt.
\end_layout

\begin_layout Standard
The following is an example of using the get_clock_offsets task where we
 specify a specific output directory and instruct TEACUP to use the clock
 of host `testrouter' as reference:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab get_clock_offsets:out_dir=../clock_data, baseline_host=testrouter
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Correcting timestamps during data extraction or analysis
\end_layout

\begin_layout Standard
The 
\family typewriter
\size small
ts_correct
\family default
\size default
 parameter instructs extract tasks to use previously-computed clock offset
 data to correct timestamps for plotting (e.g.
 timestamps from tcpdump or web10g files).
 As explained earlier, the correction can only be done if an experiment
 was run with broadcast/multicast pings (see Section IV-I in technical report
 
\begin_inset CommandInset citation
LatexCommand cite
key "zander2015caia_teacup_v1.0"

\end_inset

).
 
\end_layout

\begin_layout Standard
No timestamp correction occurs if 
\family typewriter
\size small
ts_correct=0
\family default
\size default
 or is undefined.
 If 
\family typewriter
\size small
ts_correct=1
\family default
\size default
, the extract functions will generate uncorrected data files as well as
 additional data files with all timestamps corrected according to the clock
 offsets calculated by the get_clock_offsets task (the additional files
 have an appended .tscorr extension), and analyse functions will plot the
 data with timestamps corrected (based on the .tscorr files).
\end_layout

\begin_layout Standard
Note that if ts_correct is set to 1 and no clock offsets file is present,
 TEACUP will automatically try to create the file
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
<test_id>_clock_offsets.txt file
\end_layout

\end_inset

.
 Also note that enabling 
\family typewriter
\size small
ts_correct
\family default
\size default
 will only modify timestamps in the additional interim data files used for
 plotting.
 Original timestamps in the actual log files (e.g.
 timestamps in tcpdump or web10g files) are 
\emph on
not
\emph default
 modified.
\end_layout

\begin_layout Standard
Prior to TEACUP version 0.9 
\family typewriter
\size small
ts_correct=0
\family default
\size default
 was the default, but since version 0.9 the default is 
\family typewriter
\size small
ts_correct=1
\family default
\size default
.
 If an experiment was run without broadcast/multicast pings, 
\family typewriter
\size small
ts_correct=0
\family default
\size default
 must be specified for extract or analysis tasks, or otherwise these tasks
 will fail.
 
\end_layout

\begin_layout Subsubsection
Data series selection
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sub:Data-series-selection"

\end_inset


\end_layout

\begin_layout Standard
All extract tasks, except extract_dash_goodput, provide the 
\family typewriter
\size small
source_filter
\family default
\size default
 parameter that provides each extract and analysis function with a rudimentary
 mechanism to identify the flows to be plotted.
 Note,
\family typewriter
\size small
 source_filter
\family default
\size default
 only limits what is plotted.
 Intermediate data files are always extracted for all flows in an experiment.
 However, the list of files passed by the extract task to the analysis task
 will only contain files for the selected flows.
\end_layout

\begin_layout Standard
Desired flows may be specified using combinations of patterns matching source
 and/or destination IP address and port numbers.
 
\end_layout

\begin_layout Standard
The filter string format is:
\end_layout

\begin_layout Standard
\align left

\family typewriter
\size small
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
(S|D)_<ip>_<port>[;(S|D)_<ip>_(<port>|'*')]* 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
For example, the following command only plots data for flows 
\emph on
from
\emph default
 host 172.16.10.2 port 80:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab analyse_all:source_filter= "S_172.16.10.2_80"
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Note, that the notion of `flow' here is unidirectional.
 The flow consisting of packets heading
\emph on
 to
\emph default
 host 172.16.10.2 port 80 would be selected by specifying:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab analyse_all:source_filter= "D_172.16.10.2_80"
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The specified filter string also determines the order of the flows in the
 graph(s).
 Flows are plotted in the order of the filters specified.
 For example, if there are two flows, one from host 172.16.10.2 port 80 and
 another from host 172.16.10.2 port 81 by default the port 80 flow would be
 the first data series and the port 81 flow would be the second data series.
 One can reverse the two flows in the graphs by specifying:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab analyse_all:source_filter= "S_172.16.10.2_81;S_172.16.10.2_80"
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Instead of an actual port number on can specify the wild-card character
 (`*').
 This allows to filter on a specific source or destination with any port
 number.
 For example, we can plot data for all flows 
\emph on
from
\emph default
 host 172.16.10.2 regardless of their port numbers:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab analyse_all:source_filter= "S_172.16.10.2_*"
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Note that 
\family typewriter
\size small
source_filter
\family default
\size default
 identifies the flows selected, not the flows filtered out.
\end_layout

\begin_layout Subsubsection
Filtering SIFTR log lines
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sub:filtering_siftr"

\end_inset


\end_layout

\begin_layout Standard
The extract_all, extract_cwnd, extract_tcp_rtt and extract_tcp_stat tasks
 have a parameter 
\family typewriter
\size small
io_filter
\family default
\size default
 that allows specifying whether TCP statistics are extracted based on incoming
 (set value to `i') outgoing (set value to `o') or incoming and outgoing
 packets (set value to `io') from SIFTR log files.
 The default value is `o'.
 Currently, the parameter is only effective with SIFTR log files, it does
 nothing with web10g log files.
 
\end_layout

\begin_layout Standard
Note: this parameter only takes effect if 
\family typewriter
\size small
replot_only
\family default
\size default
 is set to `0' (i.e.
 you must re-extract intermediate data if you want to change io_filter)
\end_layout

\begin_layout Subsubsection
Burst-separation (incast experiments)
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sub:burst_separation"

\end_inset


\end_layout

\begin_layout Standard
The tasks extract_rtt, extract_ackseq and extract_incast can extract data
 on a per-burst basis for incast experiments, where we have bursts of TCP
 requests sent by a querier to multiple responders interspersed by idle
 times.
 The parameter 
\family typewriter
\size small
burst_sep
\family default
\size default
 allows to specify the time between bursts.
 Any idle time longer than 
\family typewriter
\size small
burst_sep
\family default
\size default
 signals the start of a new burst.
 If 
\family typewriter
\size small
burst_sep
\family default
\size default
 is set to 0, data will not be separated according to bursts.
 
\end_layout

\begin_layout Standard
The parameters 
\family typewriter
\size small
sburst
\family default
\size default
 and 
\family typewriter
\size small
eburst
\family default
\size default
 can be used to select the bursts to be plotted (start index of 1).
 They are not useful when running an extract task directly.
 They are only useful when passed to an analyse task, which passes them
 further to an extract task.
\end_layout

\begin_layout Subsection
extract_pktsizes -- Extract packet sizes for throughput computation
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sub:extract_pktsizes"

\end_inset


\end_layout

\begin_layout Standard
This task extracts packet size information from tcpdump files.
 The packet size data is used by the analysis_throughput task to compute
 and plot the throughput.
 Extracted data files are created for each traffic flow and have a .psiz
 extension.
 They contain the following space-separated columns with one line per packet:
 timestamp, packet size in bytes (from tcpdump file).
 
\end_layout

\begin_layout Standard
Besides the common parameters the task has the parameters 
\family typewriter
\size small
link_len 
\family default
\size default
and 
\family typewriter
\size small
total_per_experiment
\family default
\size default
.
 
\end_layout

\begin_layout Subsubsection
IP layer vs link layer packet size
\end_layout

\begin_layout Standard
The parameter 
\family typewriter
\size small
link_len 
\family default
\size default
allows to specify whether the packet sizes extracted are the IP sizes (`0')
 or the sizes including the link layer header (`1').
 
\end_layout

\begin_layout Subsubsection
Total over all flows
\end_layout

\begin_layout Standard
By default data is extracted per flow, but if 
\family typewriter
\size small
total_per_experiment
\family default
\size default
 is set to `1' in addition a file with all packet sizes will be created.
 Note that if 
\family typewriter
\size small
total_per_experiment
\family default
\size default
 is set to `1', a source_filter should be specified to prevent aggregating
 both directions of traffic.
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard
The following shows an example of how to use the task:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab extract_pktsizes:test_id= 20131206-102931_tcp_newreno,out_dir=./results,
 link_len=1
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
extract_rtt -- RTT estimates (based on SPP)
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sub:extract_rtt"

\end_inset


\end_layout

\begin_layout Standard
This task computes RTTs for bidirectional flows using SPP 
\begin_inset CommandInset citation
LatexCommand cite
key "sppweb"

\end_inset

.
 Extracted data files are created for each bidirectional traffic flow with
 .rtts extension.
 They contain the following space-separated columns with one line per timestamp:
 timestamp of RTT and RTT estimated by SPP.
\end_layout

\begin_layout Standard
Besides the common parameters the task has the parameter 
\family typewriter
\size small
udp_map
\family default
\size default
.
 This parameter allows to map unidirectional UDP flows in opposite direction
 into bidirectional UDP flows, as SPP needs bidirectional flows to estimate
 the RTT.
 The format for the parameter is a semicolon-separated list of source IP
 source port pairs.
 Each pair must be specified as <src_ip1>,<src_port1>:<src_ip2>,<src_port2>,
 where <src_ip1>,<src_port1> is the source IP addresses and source port
 pair of one UDP flow and <src_ip2>,<src_port2> is the source IP addresses
 and source port pair of another UDP flow (in opposite direction).
 The task also has the 
\family typewriter
\size small
burst_sep
\family default
\size default
, 
\family typewriter
\size small
sburst
\family default
\size default
 and 
\family typewriter
\size small
eburst
\family default
\size default
 parameters which make it possible to extract the RTT estimates on a burst-by-bu
rst bases for incast experiments.
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard
The following shows an example of how to use the task:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab extract_rtt:test_id= 20131206-102931_tcp_newreno, out_dir=./results/
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The following command shows how to combine two unidirectional UDP flows,
 one originating from 192.168.0.10 port 5000 and the other originating from
 192.168.0.11 port 5001:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\family typewriter
\size footnotesize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab extract_rtt:test_id= 20131206-102931_tcp_newreno, udp_map= 
\begin_inset Quotes erd
\end_inset

192.168.0.10,5000:192.168.0.11,5001
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
extract_cwnd -- TCP CWND
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sub:extract_cwnd"

\end_inset


\end_layout

\begin_layout Standard
This task extracts the CWND data from TCP log files.
 Extracted data files are created for each traffic flow and have a .cwnd
 extension.
 They contain the following comma-separated columns with one line per timestamp:
 timestamp and CWND value (from SIFTR or web10g log file).
 Besides the common parameters the task has the parameter 
\family typewriter
\size small
io_filter
\family default
\size default
 that can be used in case of SIFTR logs to use TCP statistics only for incoming,
 outgoing or incoming and outgoing packets (explained in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:extract_cwnd"

\end_inset

).
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard
The following shows an example of how to use the task:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab extract_cwnd:test_id= 20131206-102931_tcp_newreno, out_dir=./results/
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
extract_tcp_rtt -- RTT estimates from TCP
\end_layout

\begin_layout Standard
This task extracts TCP's RTT estimates from the TCP log files (SIFTR or
 web10g).
 Extracted data files are created for each traffic flow and have a .tcp_rtt
 extension.
 They contain the following comma-separated columns with one line per timestamp:
 timestamp, smoothed RTT estimate and sample/unsmoothed RTT estimate.
 Besides the common parameters the task has the parameter 
\family typewriter
\size small
io_filter
\family default
\size default
 (explained in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:extract_cwnd"

\end_inset

).
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard
The following shows an example of how to use the task:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab extract_cwnd:test_id= 20131206-102931_tcp_newreno, out_dir=./results/,io_fi
lter=o
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
extract_tcp_stat -- Extract any TCP statistic
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sub:extract_tcp_stat"

\end_inset


\end_layout

\begin_layout Standard
This task extracts a user-defined statistic from the TCP log files.
 Extracted data files are created for each traffic flow and have a .tcpstat<num>
 extension where <num> is the index of the statistic (the column number
 in the SIFTR or web10g log file).
 They contain the following comma-separated columns with one line per timestamp:
 timestamp, TCP statistic selected (from SIFTR or web10g log file).
 
\end_layout

\begin_layout Standard
Besides the common parameters the task has the parameter 
\family typewriter
\size small
io_filter
\family default
\size default
 (explained in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:extract_cwnd"

\end_inset

), and the parameters 
\family typewriter
\size small
siftr_index 
\family default
\size default
and 
\family typewriter
\size small
web10g_index
\family default
\size default
.
 
\end_layout

\begin_layout Subsubsection
Statistic to extract
\end_layout

\begin_layout Standard
The parameter 
\family typewriter
\size small
siftr_index 
\family default
\size default
is used to specify the column of the statistic in SIFTR log files and the
 parameter 
\family typewriter
\size small
web10g_index 
\family default
\size default
is used to specify the column of the statistic in web10g log files.
 The start index for both parameters is 1, which selects the statistic in
 the first column.
 If the log files are a mix of SIFTR and web10g both parameters must be
 specified.
 Otherwise it is sufficient to specify just one of the parameters.
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard
The following shows an example of how to use the task:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab extract_tcp_stat:test_id= 20131206-102931_tcp_newreno,out_dir=./results,
 siftr_index=22,web10g_index=120
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
extract_all -- Combination of basic extract methods
\end_layout

\begin_layout Standard
This task executes the following tasks: extract_rtt, extract_cwnd, extract_tcp_r
tt and extract_pktsizes.
 The task parameters are a superset of the parameters of the individual
 tasks.
\end_layout

\begin_layout Subsection
extract_ackseq -- Extract acknowledged bytes or dupACKs
\end_layout

\begin_layout Standard
This task extracts TCP acknowledgement data.
 It is useful for incast experiments but not limited to these.
 Extracted data files are created for each traffic flow and have an .acks.0
 extension (without burst separation) or a file extension is .acks.<burst_number>
 (with burst separation).
 The data files contain the following space-separated columns with one line
 per timestamp: timestamp, cumulative acknowledged bytes (from tcpdump log)
 and cumulative dupACKs (from tcpdump log).
 
\end_layout

\begin_layout Standard
The task has the common parameters as well as the burst-separation parameters
 
\family typewriter
\size small
burst_sep
\family default
\size default
, 
\family typewriter
\size small
sburst
\family default
\size default
 and 
\family typewriter
\size small
eburst
\family default
\size default
 described in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:burst_separation"

\end_inset

.
 The task also has the parameter 
\family typewriter
\size small
total_per_experiment
\family default
\size default
 that if set to `1' will generate an additional file with the total cumulative
 acknowledged bytes and total cumulative dupACKs over all flows.
\end_layout

\begin_layout Standard
Since this function extracts data from the ACK stream, source_filter is
 effectively reversed compared to other tasks, such as extract_pktsizes.
 For example, if one wanted to extract throughput for the source with IP
 192.168.0.10 one would specify 
\family typewriter
\size small
source_filter=
\begin_inset Quotes erd
\end_inset

S_192.168.0.10_*
\begin_inset Quotes erd
\end_inset

.

\family default
\size default
 However, to extract the corresponding ACK data with extract_ackseq one
 has to specify
\family typewriter
\size small
 source_filter=
\begin_inset Quotes erd
\end_inset

D_192.168.0.10_*
\begin_inset Quotes erd
\end_inset


\family default
\size default
, as the ACKs travel in the opposite direction.
\end_layout

\begin_layout Subsubsection
Total over all flows
\end_layout

\begin_layout Standard
By default data is extracted per flow, but if 
\family typewriter
\size small
total_per_experiment
\family default
\size default
 is set to `1' in addition a file with total acknowledged bytes and total
 dupACKs will be created.
 Note that if 
\family typewriter
\size small
total_per_experiment
\family default
\size default
 is set to `1', a source_filter should be specified to prevent aggregating
 both directions of traffic.
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard
The following shows an example of how to use the task:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab extract_ackseq:test_id= 20131206-102931_tcp_newreno,out_dir=./results,
 burst_sep=1.0
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
extract_dash_goodput -- Extract goodput for DASH experiments
\end_layout

\begin_layout Standard
This task extracts goodput for DASH-like clients.
 Extracted data files are created for each DASH-like client and have a .dashgp
 extension.
 They contain the following comma-separated data columns with one line per
 data block downloaded: timestamp of request, size of requested and downloaded
 block in bytes, bit rate in megabit per second, response time in seconds,
 nominal cycle length in seconds, nominal rate in kilobits per second, and
 block number.
\end_layout

\begin_layout Standard
Besides the common parameters the task has a 
\family typewriter
\size small
dash_log_list
\family default
\size default
 parameter.
 This parameter is an alternative to specifying a list of test IDs, and
 allows a user to specify a file name that contains a list of httperf log
 files for DASH-like clients which should be processed.
 The format of the log list file is one file name per line.
 The file paths do not need to be specified, as TEACUP will automatically
 find the files assuming they are in a sub directory below the fabfile.py
 directory.
 If the 
\family typewriter
\size small
test_id
\family default
\size default
 parameter is specified, the 
\family typewriter
\size small
dash_log_list
\family default
\size default
 parameter is ignored.
 
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard
The following shows an example of how to use the task:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab extract_dash_goodput: dash_log_list=dash_logs.txt,out_dir=./results/
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
extract_incast -- Extract response times for incast experiments (from httperf
 logs)
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sub:extract_incast"

\end_inset


\end_layout

\begin_layout Standard
This task extracts response times for incast experiments.
 Extracted data files are created for each traffic flow and have an .rtimes
 extension (single responders) or an .rtimes.all extension (all responders
 merged).
 They contain the following space-separated columns with one line per timestamp:
 timestamp, burst number (starting from 1), response time in seconds (from
 httperf log file).
 
\end_layout

\begin_layout Standard
Besides the common parameters the task has the 
\family typewriter
\size small
sburst
\family default
\size default
 and 
\family typewriter
\size small
eburst
\family default
\size default
 parameters (
\family typewriter
\size small
burst_sep
\family default
\size default
 is not needed here as the httperf log data is already separated in bursts)
 to enable plotting of the response times only for selected bursts.
\end_layout

\begin_layout Subsubsection
Filtering on flows
\end_layout

\begin_layout Standard
Note that for extract_incast flows are bidirectional, and the source of
 an incast flow is always the querier and the destination of an incast flow
 is always one of the responders.
 This needs to be taken into account when using 
\family typewriter
\size small
source_filter
\family default
\size default
.
 Also note that since there is no information about a querier's source port
 numbers in httperf log files, TEACUP will create fake source port numbers.
\end_layout

\begin_layout Subsubsection
Slowest response only
\end_layout

\begin_layout Standard
The task has a parameter 
\family typewriter
\size small
slowest_only
\family default
\size default
 (default is `0').
 If 
\family typewriter
\size small
slowest_only
\family default
\size default
 is set to `1', the task will also generate a file with the extension .rtimes.slow
est that only contains the slowest response time over all flows for each
 burst.
 If 
\family typewriter
\size small
slowest_only
\family default
\size default
 is set to `2', the task will also generate a file with the extension .rtimes.slow
est that only contains the time between the first request sent and the time
 the last response was finished for each burst (default is `0').
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard
The following shows an example of how to use the task:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab extract_incast:test_id= 20131206-102931_tcp_newreno,out_dir=./results,
 sburst=2,eburst=0
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
extract_incast_restimes -- Extract response times for incast experiments
 (from tcpdump)
\end_layout

\begin_layout Standard
This task extracts response times for incast experiments.
 The difference between the extract_incast task (Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:extract_incast"

\end_inset

) and this task is that the former extracts the response times from httperf
 logs while this task extracts the response times from tcpdump files.
 Extracted data files are created for each traffic flow and have an .restimes
 extension.
 They contain the following space-separated columns with one line per timestamp:
 timestamp the request was sent, burst number (starting from 1), <IP>.<port>
 of the querier, <IP>.<port> of the responder, and the response time in seconds
 (time between last packet of response and GET packet from tcpdump).
 
\end_layout

\begin_layout Standard
The task has the common parameters.
 Furthermore, it has the parameter 
\family typewriter
\size small
query_host
\family default
\size default
, which must be used to specify the querier (set to name as used in TPCONF_hosts
)
\end_layout

\begin_layout Subsubsection
Filtering on flows
\end_layout

\begin_layout Standard
Note that for extract_incast_restimes flows are bidirectional, and the source
 of an incast flow is always the querier and the destination of an incast
 flow is always one of the responders.
 This needs to be taken into account when using 
\family typewriter
\size small
source_filter
\family default
\size default
.
\end_layout

\begin_layout Subsubsection
Slowest response only
\end_layout

\begin_layout Standard
The task has a parameter 
\family typewriter
\size small
slowest_only
\family default
\size default
 (default is `0').
 If 
\family typewriter
\size small
slowest_only
\family default
\size default
 is set to `1', the task will also generate a file with the extension .restimes.sl
owest that only contains the slowest response time over all flows for each
 burst.
 If 
\family typewriter
\size small
slowest_only
\family default
\size default
 is set to `2', the task will also generate a file with the extension .restimes.sl
owest that only contains the time between the first request sent and the
 time the last response was finished for each burst (default is `0').
\end_layout

\begin_layout Subsection
extract_incast_iqtimes -- Extract inter-query times (incast experiments)
\end_layout

\begin_layout Standard
This task extracts the times between requests sent by the querier for incast
 experiments.
 Extracted data files are created for each traffic flow and have an .iqtime.all
 extension (combined inter-query times) and .iqtime.<responder> where <responder>
 is the IP plus port number of a responder (per responder inter-query times).
 They contain the following space-separated columns with one line per timestamp:
 timestamp, IP of responder, port number of responder, time between request
 and first request in burst sent by querier, and time between request and
 previous request in same burst sent by querier.
 
\end_layout

\begin_layout Standard
The task has the common parameters.
 It also has the 
\family typewriter
\size small
burst_sep
\family default
\size default
 parameter used to detect the bursts; however, the semantic here is slightly
 different as 
\family typewriter
\size small
burst_sep
\family default
\size default
 
\emph on
must
\emph default
 be a number greater than 0 (default is 1.0) in order to separate the query
 bursts.
 The parameter 
\family typewriter
\size small
query_host
\family default
\size default
 must be used to specify the querier (set to name as used in TPCONF_hosts).
 
\end_layout

\begin_layout Subsubsection
Aggregate responders
\end_layout

\begin_layout Standard
The parameter 
\family typewriter
\size small
by_responder
\family default
\size default
 is set to `1' by default meaning per responder data files are created.
 If set to `0' one file with the times for all responders is created.
 
\end_layout

\begin_layout Subsubsection
Cumulative data
\end_layout

\begin_layout Standard
By default and if the parameter 
\family typewriter
\size small
cumulative 
\family default
\size default
is set to `0' raw inter-query times are computed (as explained above).
 If the parameter 
\family typewriter
\size small
cumulative 
\family default
\size default
is set to `1' subsequent bursts are plotted in a cumulative fashion, i.e.
 the time of the first request in a burst is the time of the last request
 in the previous burst.
 Cumulative numbers make it easier to see long term trends, such as the
 inter-query times being consistently larger in one experiment compared
 to another experiment.
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard
The following shows an example of how to use the task:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab extract_iqtimes:test_id= 20131206-102931_tcp_newreno,out_dir=./results,
 query_host=testhost1,cumulative=1
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
extract_pktloss -- Extract packet loss information
\end_layout

\begin_layout Standard
This task can only be used with emulated FPS game traffic generated with
 the start_fps_game function.
 Extracted data files are created for each traffic flow and have a .loss
 extension.
 They contain the following space-separated columns with one line per packet:
 timestamp, lost flag (0 if packet arrived, 1 if packet was lost).
 The task has the common parameters.
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard
The following shows an example of how to use the task:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab extract_pktloss:test_id= 20141003-111821_game_traffic_aqm_pfifo, out_dir=./
results
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Data Analysis
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sec:Data_analysis"

\end_inset


\end_layout

\begin_layout Standard
Now we describe TEACUP's analyse tasks that allow to plot various types
 of graphs.
 First, we give an overview of the existing analysis tasks.
 Then we discuss parameters common to most tasks as well as common environment
 variables that are used by the plotting code.
 Next, we discuss the tasks in detail.
 Finally, we discuss ways to customise the plotting beyond using the existing
 tasks.
\end_layout

\begin_layout Subsection
Analysis tasks overview
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sub:analysis_functions"

\end_inset


\end_layout

\begin_layout Standard
Currently basic analysis tasks exist for:
\end_layout

\begin_layout Enumerate
Plotting the throughput including all header bytes based on tcpdump data
 (analyse_throughput);
\end_layout

\begin_layout Enumerate
Plotting the Round Trip Time (RTT) using SPP 
\begin_inset CommandInset citation
LatexCommand cite
key "zander13minimally,sppweb"

\end_inset

 based on tcpdump data (analyse_rtt);
\end_layout

\begin_layout Enumerate
Plotting the TCP congestion window size (CWND) based on SIFTR and Web10G
 data (analyse_cwnd);
\end_layout

\begin_layout Enumerate
Plotting the TCP RTT estimate based on SIFTR and Web10G data (analyse_tcp_rtt).
 The task can plot both, the smoothed estimate and an unsmoothed estimate
 (for SIFTR the unsmoothed estimate is the improved ERTT 
\begin_inset CommandInset citation
LatexCommand cite
key "CAIA-TR-100219A"

\end_inset

 estimate);
\end_layout

\begin_layout Enumerate
Plotting an arbitrary TCP statistic from SIFTR and Web10G data (analyse_tcp_stat
);
\end_layout

\begin_layout Enumerate
Plotting cumulative bytes acknowledged or dupACKs over time from tcpdump
 data (analyse_ackseq);
\end_layout

\begin_layout Enumerate
Plotting the goodput for DASH-like streaming clients (analyse_dash_goodput);
\end_layout

\begin_layout Enumerate
Plotting the goodput for TCP flows based on acknowledged bytes (analyse_goodput)
;
\end_layout

\begin_layout Enumerate
Plotting the response times for incast experiments (analyse_incast);
\end_layout

\begin_layout Enumerate
Plotting the inter-query times for incast experiments (analyse_incast_iqtimes).
\end_layout

\begin_layout Standard
A convenience function exists that plots graphs 1--4 listed above (analyse_all).
 
\end_layout

\begin_layout Standard
The above tasks usually plot a single statistic over time.
 However, there are two tasks that allow to compare the above statistics
 across different experimental settings:
\end_layout

\begin_layout Enumerate
Plotting boxplots, mean or median of a statistic for different combinations
 of experiment parameters (analyse_cmpexp);
\end_layout

\begin_layout Enumerate
Plotting 2D-density plots or ellipse plots of two statistics for different
 combinations of experiment parameters (analyse_2d_density).
\end_layout

\begin_layout Subsection
Common task parameters
\end_layout

\begin_layout Standard
This section describes common task parameters.
 Many of them are supported by all tasks, but some of them are only supported
 by a subset of tasks, as noted in the task-specific sections.
 For precise information on task parameters refer to the TEACUP command
 reference 
\begin_inset CommandInset citation
LatexCommand cite
key "zander2015caia_teacup_v1.0_reference"

\end_inset

.
 Task-specific parameters are described in the sections that describes the
 task.
\end_layout

\begin_layout Subsubsection
Specifying experiment(s) to analyse
\end_layout

\begin_layout Standard
Most analyse task have a 
\family typewriter
\size small
test_id
\family default
\size default
 parameter.
 The analysis can be run for a single experiment only by specifying a single
 test ID.
 For example, the following command generates the RTT graph for the experiment
 
\family typewriter
\size footnotesize
20131206-102931_dash_2000_tcp_newreno
\family default
\size default
:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab analyse_rtt:test_id= 20131206-102931_dash_2000_tcp_newreno
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The 
\family typewriter
\size small
test_id
\family default
\size default
 parameter also accepts multiple test IDs separated by semicolons.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Since TEACUP v0.5.
 No trailing semicolon for only one test ID.
\end_layout

\end_inset

 If multiple IDs are specified, results from each test ID will be plotted
 on the same graph(s).
 For time series graphs, produced by analyse_rtt or analyse_throughput etc.,
 the resulting graphs' file name(s) will be the 
\emph on
first
\emph default
 test ID specified followed by the string "_comparison" to distinguish from
 graphs where only one experiment is plotted, created in the sub directory
 of the test ID specified first.
\end_layout

\begin_layout Standard
Instead of the 
\family typewriter
\size small
test_id
\family default
\size default
 parameter some tasks, such as analyse_cmpexp and analyse_2d_density, have
 a parameter that allows specifying a file that contains a list of experiment
 IDs.
 
\end_layout

\begin_layout Subsubsection
Data series selection
\end_layout

\begin_layout Standard
All analyse tasks, except analyse_dash_goodput, provide the 
\family typewriter
\size small
source_filter
\family default
\size default
 parameter that gives each extract and analysis function a rudimentary mechanism
 to identify the flows to be plotted.
 Note,
\family typewriter
\size small
 source_filter
\family default
\size default
 only limits what is plotted.
 Intermediate data files are always extracted for all flows in an experiment.
 However, the list of files passed by the extract task to the analysis task
 will only contain files for the selected flows.
 Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Data-series-selection"

\end_inset

 describes how to use the parameter.
\end_layout

\begin_layout Subsubsection
Re-using previously extracted data
\end_layout

\begin_layout Standard
All analysis functions above have a parameter 
\family typewriter
\size footnotesize
replot_only
\family default
\size default
.
 This parameter allows to replot the graphs without extracting the data
 again (e.g.
 from tcpdump, SIFTR or Web10G files).
 If 
\family typewriter
\size small
replot_only
\family default
\size default
 is set to `1' data is still extracted for experiments where data has not
 been extracted before, but for experiments with already extracted data
 the graph(s) are created based on the existing extracted data.
 For example, the following command recreates the graphs without extracting
 already extracted data again:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab analyse_all:replot_only=1
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Specifying the location of intermediate data files
\end_layout

\begin_layout Standard
By default all interim data files are generated in a sub directory (with
 the directory name being the test ID prefix) inside the directory where
 fab is executed.
 To put the output files into a specific directory the 
\family typewriter
\size footnotesize
out_dir
\family default
\size default
 parameter can be specified (and it will be passed to the extract tasks(s)).
 If 
\family typewriter
\size footnotesize
out_dir
\family default
\size default
 is an absolute path, the output files will be put in the specified directory.
 If 
\family typewriter
\size footnotesize
out_dir
\family default
\size default
 is a relative path, it is treated as relative 
\emph on
to the location of the log files
\emph default
 when determining the directory for the output files.
 The directories are created automatically if they do not exist.
 The following is an example where the output files are put in sub-directories
 named `results' inside each test ID prefix sub directory with experiment
 data:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab analyse_all:out_dir=./results/
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Assuming we executed the last command in a fabfile directory <fabfile_dir>
 with two sub directories, one for test ID prefix 
\family typewriter
\size small
20131206-102931_exp
\family default
\size default
 and one for test ID prefix 
\family typewriter
\size small
20131206-124510_exp
\family default
\size default
, the output files will be put in the directories:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily}"
inline false
status open

\begin_layout Plain Layout

<fabfile_dir>/20131206-102931_exp/results/
\end_layout

\begin_layout Plain Layout

<fabfile_dir>/20131206-124510_exp/results/
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Specifying the location of final graphs
\end_layout

\begin_layout Standard
By default, the final PDF files (graphs) will be created in 
\family typewriter
\size footnotesize
out_dir
\family default
\size default
.
 This can be adjusted using the 
\family typewriter
\size footnotesize
pdf_dir
\family default
\size default
 parameter.
 Like 
\family typewriter
\size footnotesize
out_dir
\family default
\size default
 the specified directory is either an absolute path or a relative path which
 is relative to the location of the experiment's log files.
 The directory is automatically created if it does not exist.
 The parameter can be used as follows:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab analyse_spp_rtt:test_id= 20131206-102931_dash_2000_tcp_newreno, out_dir=./r
esults,pdf_dir=./pdfs
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Suppressing small or unchanging datasets
\end_layout

\begin_layout Standard
In many experiments we may have TCP flows where data only/mostly flows in
 one direction and TCP statistics in the other direction are basically constant.
 The 
\family typewriter
\size footnotesize
omit_const
\family default
\size default
 parameter can be used to suppress any completely constant series (i.e.
 all values are identical).
 It can be used as follows:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab analyse_all:omit_const=1
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Any flows that have only very few data points (less or equal than 
\family typewriter
\size footnotesize
min_values
\family default
\size default
) are excluded from the plot (by default 
\family typewriter
\size footnotesize
min_values
\family default
\size default
 = 3).
 The min_values parameter can be changed on the command line, for example
 the following command omits any flows with 20 data points or less from
 the plots:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab analyse_all:min_values=20
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Adjusting the y-axes
\end_layout

\begin_layout Standard
All analyse tasks have the parameters 
\family typewriter
\size footnotesize
ymin
\family default
\size default
 and 
\family typewriter
\size footnotesize
ymax
\family default
\size default
.
 These parameter can be used to set the y-axis limits to specific values,
 for example to produce multiple plots with the same scale (by default 
\family typewriter
\size footnotesize
ymin
\family default
\size default
 is 0 and 
\family typewriter
\size footnotesize
ymax
\family default
\size default
 is determined automatically).
 The parameters can be used as follows (here the y-axis range is set to
 100--200
\begin_inset space \thinspace{}
\end_inset

ms):
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab analyse_spp_rtt:test_id= 20131206-102931_dash_2000_tcp_newreno, ymin=100,y
max=200
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Adjusting time (x-axes) scales
\end_layout

\begin_layout Standard
All tasks tasks that plot data over time have the parameters 
\family typewriter
\size footnotesize
stime
\family default
\size default
 and 
\family typewriter
\size footnotesize
etime
\family default
\size default
 to control the x-axis limits of the plots (by default 
\family typewriter
\size footnotesize
stime
\family default
\size default
 is 0.0 and 
\family typewriter
\size footnotesize
etime
\family default
\size default
 is the duration of the experiment).
 Note that using these parameters allows to zoom in, but the data outside
 the specified interval is not filtered out.
 The y-axis maximum is adjusted automatically to the maximum occurring in
 the specified x-axis interval, but the legend is not adjusted.
 To remove unwanted entries in the legend (e.g.
 flows not in the time window), one must use 
\family typewriter
\size small
source_filter
\family default
\size default
 to filter out the the unwanted flows (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Data-series-selection"

\end_inset

).
 The parameters can be used as follows (here the x-axis range is set to
 5--10 seconds):
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab analyse_spp_rtt:test_id= 20131206-102931_dash_2000_tcp_newreno, stime=5,et
ime=10
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
User-supplied legend names
\end_layout

\begin_layout Standard
By default the legend entries are simply the flow tuples (source IP, source
 port, destination IP, destination port).
 The parameter 
\family typewriter
\size footnotesize
lnames
\family default
\size default
 can be used to replace these with more informative names.
 One must specify the same number as names as there are data series.
 Names specified must be separated by semicolons.
 The parameter can be used as follows:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab analyse_spp_rtt:test_id= 20131206-102931_dash_2000_tcp_newreno, lnames='TC
P Reno;TCP Cubic'
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Prefix for pdf file names
\end_layout

\begin_layout Standard
The 
\family typewriter
\size footnotesize
out_name
\family default
\size default
 parameter allows to change the name of the PDF files produced.
 If 
\family typewriter
\size footnotesize
out_name
\family default
\size default
 is specified, the prefix for the PDF files is 
\family typewriter
\size footnotesize
out_name
\family default
\size default
 followed by the test ID (followed by "_comparison" for comparison graphs
 based on multiple test IDs).
 The parameter can be used as follows:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab analyse_spp_rtt:test_id= 20131206-102931_dash_2000_tcp_newreno, out_name='
ExperimentA'
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Filtering SIFTR log lines
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sub:filtering_siftr_analysis"

\end_inset


\end_layout

\begin_layout Standard
The analyse_all, analyse_cwnd, analyse_tcp_rtt and analyse_tcp_stat tasks
 have a parameter 
\family typewriter
\size small
io_filter
\family default
\size default
 that allows specifying whether TCP statistics are plotted based on incoming
 (set value to `i') outgoing (set value to `o') or incoming and outgoing
 packets (set value to `io') for SIFTR log files.
 The default value is `o'.
 Currently, the parameter is only effective with SIFTR log files, it does
 nothing with web10g log files.
 
\end_layout

\begin_layout Standard
Note: this parameter only takes effect if 
\family typewriter
\size small
replot_only
\family default
\size default
 is set to `0' (i.e.
 you must re-extract intermediate data if you want to change io_filter)
\end_layout

\begin_layout Subsubsection
Correcting timestamps
\end_layout

\begin_layout Standard
All analyse tasks provide a 
\family typewriter
\size small
ts_correct
\family default
\size default
 parameter that can be used to correct timestamps in the measurement data
 (e.g.
 timestamps in tcpdump files) based on estimated clock offsets (see Section
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:clock-offset-analysis"

\end_inset

).
 This parameter is passed to the extract task(s) and Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:clock-offset-analysis"

\end_inset

 describes in more detail how it works.
\end_layout

\begin_layout Subsubsection
Burst-separation (incast experiments)
\end_layout

\begin_layout Standard
The tasks analyse_rtt, analyse_ackseq and analyse_incast can extract and
 plot data on a per-burst basis for incast experiments, where we have bursts
 of TCP requests sent by a querier to multiple responders interspersed by
 idle times.
 The parameter 
\family typewriter
\size small
burst_sep
\family default
\size default
 allows to specify the time between bursts.
 Any idle time longer than 
\family typewriter
\size small
burst_sep
\family default
\size default
 signals the start of a new burst.
 If 
\family typewriter
\size small
burst_sep
\family default
\size default
 is set to 0, data will not be separated according to bursts.
 The parameters 
\family typewriter
\size small
sburst
\family default
\size default
 and 
\family typewriter
\size small
eburst
\family default
\size default
 can be used to select the bursts to be plotted (they start with an index
 of 1).
 Setting 
\family typewriter
\size small
eburst=0
\family default
\size default
 means to end with the last burst.
\end_layout

\begin_layout Subsubsection
Total throughput/goodput
\end_layout

\begin_layout Standard
The tasks analyse_throughput and analyse_goodput by default plot throughput
 and goodput for each direction of each traffic flow.
 The parameter 
\family typewriter
\size small
total_per_experiment
\family default
\size default
 can be used to plot the total throughput or goodput.
 Note that this parameter will cause the tasks to sum up all the traffic
 in both directions unless a 
\family typewriter
\size small
source_filter
\family default
\size default
 is specified.
 Usually, we want the total only in one direction, so a 
\family typewriter
\size small
source_filter
\family default
\size default
 should be specified that filters on a particular source or destination.
 
\end_layout

\begin_layout Subsection
Common plotting environment variables
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sub:plot-env-vars"

\end_inset


\end_layout

\begin_layout Standard
Plotting behaviour can be further controlled by a number of shell environment
 variables.
 Here we explain the parameters that work for many analyse functions.
 Task-specific variables are described in the task sections.
 How to set these environment variables depends on your Unix shell.
\end_layout

\begin_layout Subsubsection
Space for the legend
\end_layout

\begin_layout Standard
The variable TC_YMAX_INC controls the space for the legend.
 It assumes the legend is plotted at the top, which is the default.
 The actual y-axis maximum for the plot is 
\begin_inset Formula $y_{\mathrm{max}}\left(1+\mathrm{TC\_YMAX\_INC}\right)$
\end_inset

, where 
\begin_inset Formula $y_{\mathrm{max}}$
\end_inset

 is the maximum based on the data (or the maximum specified by the user).
\end_layout

\begin_layout Subsubsection
Smoothing the throughput calculations
\end_layout

\begin_layout Standard
Throughput always needs to be computed over some time interval.
 The variables TC_AGGR_WIN_SIZE and TC_AGGR_INT_FACTOR allow you to specify
 the window size and interpolation for throughput plots (including comparison
 plots for throughput using the task described in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:plot-metric-comparison"

\end_inset

).
 Interpolation is useful to `fill in the gaps' when a long window size is
 chosen to mitigate noise in the data.
\end_layout

\begin_layout Standard
TC_AGGR_WIN_SIZE is specified in seconds, with fractional values allowed.
 Setting TC_AGGR_INT_FACTOR to 1 means no interpolation, whereas setting
 it to an integer value 
\begin_inset Formula $n$
\end_inset

 greater than 1 means you will get 
\begin_inset Formula $n$
\end_inset

 times the number of data points (where 
\begin_inset Formula $n-1$
\end_inset

 points are interpolated points).
 Effectively the interpolation creates overlapping time windows, with the
 gaps between windows being TC_AGGR_WIN_SIZE/TC_AGGR_INT_FACTOR seconds.
 By default TC_AGGR_WIN_SIZE=1 and TC_AGGR_INT_FACTOR=4.
\end_layout

\begin_layout Subsubsection
Point thinning
\end_layout

\begin_layout Standard
By default all plot functions will plot every point for each data series.
 If the data series' are very large, the resulting PDF files will be large
 and the figures will take a long time to display.
 To reduce the size of the plots and the time for opening them without loosing
 important information TEACUP implements 
\begin_inset Quotes eld
\end_inset

point thinning
\begin_inset Quotes erd
\end_inset

, which can be controlled with the variable TC_PTHIN_DIST or TC_PTHIN_DIST_FAC.
 
\end_layout

\begin_layout Standard
Using TC_PTHIN_DIST one can set the minimum (Euclidean) distance between
 plotted data points.
 Any data points within the minimum distance are not plotted.
 For example, TC_PTHIN_DIST=0.25 means the minimum (Euclidean) distance between
 two plotted points is 0.25 and any data points in-between are not plotted.
 By default TC_PTHIN_DIST=0, which means point thinning is disabled.
\end_layout

\begin_layout Standard
Using the absolute Euclidean distance is problematic if the scales of x-axis
 and y-axis differ significantly.
 Then, we are likely to have either too few points in one dimension or too
 many points in the other dimension.
 Also specifying an absolute distance means we may need to adjust the distance
 if we create zoomed-in graphs.
 
\end_layout

\begin_layout Standard
Since version 0.8 TEACUP also allows to specify the variable TC_PTHIN_DIST_FAC
 which controls the minimum distance of points in x-dimension and y-dimension
 separately, relative to the x-range and y-range plotted.
 A point is plotted if either the distance in x-dimension is larger or equal
 TC_PTHIN_DIST_FAC*<xrange> or the distance in y-dimension is larger or
 equal TC_PTHIN_DIST_FAC*<yrange>, where <xrange> and <yrange> are given
 by the data to plot and the settings applied by the user through specifying
 ymin, ymax, stime, and etime.
\end_layout

\begin_layout Subsubsection
Size of plotted points
\end_layout

\begin_layout Standard
The point size in graphs can be controlled with a variable TC_POINT_SIZE.
 Note that TC_POINT_SIZE does not specify an absolute point size, but it
 is a scaling factor that is multiplied with the actual default point size.
 Hence, if TC_POINT_SIZE is set to 1.0 the size of points will be the default
 size, if TC_POINT_SIZE is set to 0.5 the size of points will be half the
 default size and so on.
 By default TC_POINT_SIZE is 0.5.
\end_layout

\begin_layout Subsubsection
Filter out inactive flows in time interval
\end_layout

\begin_layout Standard
By default TEACUP does not filter out flows that were not active within
 the time interval specified by the user with 
\family typewriter
\size small
etime
\family default
\size default
,
\family typewriter
\size small
 stime
\family default
\size default
.
 Legend entries for these flows are still plotted, although they can be
 supressed by using 
\family typewriter
\size small
source_filter
\family default
\size default
.
 If TC_FILTER_FLOWS is set to 1, TEACUP will filter out all flows for which
 there is no data in the time interval specified by the user.
 TC_FILTER_FLOWS only works for the tasks that plot time series, such as
 analyse_rtt, analyse_cwnd, analyse_throughput, with the exception that
 it does not work for analyse_dash_goodput.
\end_layout

\begin_layout Subsubsection
Sorting flows by start time
\end_layout

\begin_layout Standard
By default, for time series plots TEACUP sorts flows by the 5-tuple or in
 the order of specified source filters.
 If TC_SORT_FLOWS_BY_START_TIME is set to 1, the default order is ignored
 and flows are sorted in the order of their start times.
 Ordering flows by their start times can be useful in some situations, for
 example, if more than 12 flows are plotted as series of PDF files.
 The variable works for all time series plots (except analyse_dash_goodput).
 
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard
The following shows an example where we plot the throughput with a modified
 aggregation time window and enabled point thinning (using the BASH shell):
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> TC_AGGR_WIN_SIZE=2 TC_AGGR_INT_FACTOR=8 TC_PTHIN_DIST=0.25 fab analyse_throughp
ut: test_id=20131206-102931_dash_2000_tcp_newreno
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
analyse_throughput -- Plot throughput over time
\end_layout

\begin_layout Standard
This task plots the total or per-flow throughput over time.
 The task has the standard parameters 
\family typewriter
\size small
etime
\family default
\size default
, 
\family typewriter
\size small
lnames
\family default
\size default
, 
\family typewriter
\size small
min_values
\family default
\size default
, 
\family typewriter
\size small
omit_const
\family default
\size default
,
\family typewriter
\size small
 out_dir
\family default
\size default
,
\family typewriter
\size small
 out_name
\family default
\size default
, 
\family typewriter
\size small
pdf_dir
\family default
\size default
, 
\family typewriter
\size small
replot_only
\family default
\size default
,
\family typewriter
\size small
 source_filter
\family default
\size default
,
\family typewriter
\size small
 stime
\family default
\size default
, 
\family typewriter
\size small
test_id
\family default
\size default
, 
\family typewriter
\size small
ts_correct
\family default
\size default
, 
\family typewriter
\size small
ymin
\family default
\size default
, and
\family typewriter
\size small
 ymax
\family default
\size default
.
 It also has the 
\family typewriter
\size small
total_per_experiment_parameter
\family default
\size default
.
\end_layout

\begin_layout Subsubsection
Calculating IP-layer or link-layer throughput
\end_layout

\begin_layout Standard
The analyse_all and analyse_throughput tasks have a 
\family typewriter
\size footnotesize
link_len
\family default
\size default
 parameter.
 If set to `0' (default) throughput is based on IP-layer packet length,
 if set to `1' throughput is based on link-layer frame length.
 Note that the bandwidth limits specified on the router are link-layer limits.
 
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard
The following command generates a throughput graph:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab analyse_throughput:test_id= 20131206-102931_dash_2000_tcp_newreno
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The following shows an example where we plot the throughput based on the
 length of link layer frames:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab analyse_throughput:test_id= 20131206-102931_dash_2000_tcp_newreno,
 link_len=1
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
analyse_rtt -- Plot RTT (SPP) over time
\end_layout

\begin_layout Standard
This task plots RTT estimated by SPP for each bidirectional flow over time.
 The task has the standard parameters 
\family typewriter
\size small
etime
\family default
\size default
, 
\family typewriter
\size small
lnames
\family default
\size default
, 
\family typewriter
\size small
min_values
\family default
\size default
, 
\family typewriter
\size small
omit_const
\family default
\size default
,
\family typewriter
\size small
 out_dir
\family default
\size default
,
\family typewriter
\size small
 out_name
\family default
\size default
, 
\family typewriter
\size small
pdf_dir
\family default
\size default
, 
\family typewriter
\size small
replot_only
\family default
\size default
,
\family typewriter
\size small
 source_filter
\family default
\size default
,
\family typewriter
\size small
 stime
\family default
\size default
, 
\family typewriter
\size small
test_id
\family default
\size default
, 
\family typewriter
\size small
ts_correct
\family default
\size default
, 
\family typewriter
\size small
ymin
\family default
\size default
, and
\family typewriter
\size small
 ymax
\family default
\size default
.
 It also has the burst separation parameters 
\family typewriter
\size small
burst_sep
\family default
\size default
, 
\family typewriter
\size small
sburst
\family default
\size default
, 
\family typewriter
\size small
eburst 
\family default
\size default
and the 
\family typewriter
\size small
udp_map 
\family default
\size default
parameter (explained in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:extract_rtt"

\end_inset

).
\end_layout

\begin_layout Subsection
analyse_cwnd -- Plot TCP CWND over time
\end_layout

\begin_layout Standard
This task plots the TCP CWND from SIFTR or web10g logs for each direction
 of a TCP flow over time.
 The task has the standard parameters 
\family typewriter
\size small
etime
\family default
\size default
, 
\family typewriter
\size small
lnames
\family default
\size default
, 
\family typewriter
\size small
min_values
\family default
\size default
, 
\family typewriter
\size small
omit_const
\family default
\size default
,
\family typewriter
\size small
 out_dir
\family default
\size default
,
\family typewriter
\size small
 out_name
\family default
\size default
, 
\family typewriter
\size small
pdf_dir
\family default
\size default
, 
\family typewriter
\size small
replot_only
\family default
\size default
,
\family typewriter
\size small
 source_filter
\family default
\size default
,
\family typewriter
\size small
 stime
\family default
\size default
, 
\family typewriter
\size small
test_id
\family default
\size default
, 
\family typewriter
\size small
ts_correct
\family default
\size default
, 
\family typewriter
\size small
ymin
\family default
\size default
, and
\family typewriter
\size small
 ymax
\family default
\size default
.
 It also has the 
\family typewriter
\size small
io_filter 
\family default
\size default
parameter described in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:filtering_siftr_analysis"

\end_inset

.
\end_layout

\begin_layout Subsection
analyse_tcp_rtt -- Plot TCP RTT over time
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sub:analyse_tcp_rtt"

\end_inset


\end_layout

\begin_layout Standard
The analyse_tcp_rtt task plots a graph of TCP's estimate of the RTT (from
 SIFTR or web10g log files).
 The task has the standard parameters 
\family typewriter
\size small
etime
\family default
\size default
, 
\family typewriter
\size small
lnames
\family default
\size default
, 
\family typewriter
\size small
min_values
\family default
\size default
, 
\family typewriter
\size small
omit_const
\family default
\size default
,
\family typewriter
\size small
 out_dir
\family default
\size default
,
\family typewriter
\size small
 out_name
\family default
\size default
, 
\family typewriter
\size small
pdf_dir
\family default
\size default
, 
\family typewriter
\size small
replot_only
\family default
\size default
,
\family typewriter
\size small
 source_filter
\family default
\size default
,
\family typewriter
\size small
 stime
\family default
\size default
, 
\family typewriter
\size small
test_id
\family default
\size default
, 
\family typewriter
\size small
ts_correct
\family default
\size default
, 
\family typewriter
\size small
ymin
\family default
\size default
, and
\family typewriter
\size small
 ymax
\family default
\size default
.
 It also has the 
\family typewriter
\size small
io_filter 
\family default
\size default
parameter described in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:filtering_siftr_analysis"

\end_inset

.
\end_layout

\begin_layout Subsubsection
Smoothed or unsmoothed TCP RTT
\end_layout

\begin_layout Standard
By default the TCP RTT graphs generated are for the smoothed RTT estimates
 (and in case of SIFTR this is not the ERTT estimates).
 If the parameter 
\family typewriter
\size small
smoothed
\family default
\size default
 is set to `0', non-smoothed estimates are plotted (and in the case of SIFTR
 this is the ERTT estimates).
 Note, the 
\family typewriter
\size small
smoothed
\family default
\size default
 parameter can also be used with analyse_all, analyse_cmpexp and analyse_2d_dens
ity.
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard
The following command generates the TCP RTT graph for the non-smoothed estimates
:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab analyse_tcp_rtt:test_id= 20131206-102931_dash_2000_tcp_newreno, smoothed=0
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
analyse_all -- Combines basic analysis tasks
\end_layout

\begin_layout Standard
This task combines analyse_throughput, analyse_rtt, analyse_cwnd and analyse_tcp
_rtt and has the superset of all the parameters of these tasks.
 
\end_layout

\begin_layout Standard
The easiest way to generate the four basic graphs (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:analysis_functions"

\end_inset

) for all experiments is to run the following command in the directory containin
g the sub directories with experiment data:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab analyse_all
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This command will generate results for all experiments listed in the file
 
\family typewriter
\size footnotesize
experiments_completed.txt
\family default
\size default
.
 However, the 
\family typewriter
\size small
test_id
\family default
\size default
 parameter can be used to only generate the plots for a specific experiment.
 Furthermore, we can pass a custom list of experiment IDs (see below).
\end_layout

\begin_layout Subsubsection
Modifying the list of test IDs to analyse
\end_layout

\begin_layout Standard
For analyse_all the parameter 
\family typewriter
\size footnotesize
exp_list
\family default
\size default
 allows to change the file used as list of test IDs (by default 
\family typewriter
\size small
experiments_completed.txt
\family default
\size default
), which makes it possible to adjust the list of experiments we generate
 results for.
 The following shows an example:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab analyse_all:exp_list=myexp_list.txt, out_dir="./results" 
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Resuming an interrupted analyse_all
\end_layout

\begin_layout Standard
If an analysis_all was interrupted (e.g.
 because a log file was corrupted) we can resume the analysis after the
 experiment with the corrupted files.
 First, one needs to look up the next test ID after the corrupted test ID
 in 
\family typewriter
\size footnotesize
experiments_completed.txt
\family default
\size default
.
 Then, one can resume at this test ID using the 
\family typewriter
\size footnotesize
resume_id
\family default
\size default
 parameter.
 For example, if for a test ID 20131206-102931_dash_2000_tcp_newreno_run_0
 we cannot do the analysis because of corrupted data files and the next
 test ID is 20131206-102931_dash_2000_tcp_newreno_run1, we can continue
 the analysis with this command:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab analyse_all:resume_id= 20131206-102931_dash_2000_tcp_newreno_run_1
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
analyse_tcp_stat -- Plot arbitrary TCP statistic over time
\end_layout

\begin_layout Standard
The analyse_tcp_stat function can be used to plot any TCP statistic from
 SIFTR or Web10G logs.
 The task has the standard parameters 
\family typewriter
\size small
etime
\family default
\size default
, 
\family typewriter
\size small
lnames
\family default
\size default
, 
\family typewriter
\size small
min_values
\family default
\size default
, 
\family typewriter
\size small
omit_const
\family default
\size default
,
\family typewriter
\size small
 out_dir
\family default
\size default
,
\family typewriter
\size small
 out_name
\family default
\size default
, 
\family typewriter
\size small
pdf_dir
\family default
\size default
, 
\family typewriter
\size small
replot_only
\family default
\size default
,
\family typewriter
\size small
 source_filter
\family default
\size default
,
\family typewriter
\size small
 stime
\family default
\size default
, 
\family typewriter
\size small
test_id
\family default
\size default
, 
\family typewriter
\size small
ts_correct
\family default
\size default
, 
\family typewriter
\size small
ymin
\family default
\size default
, and
\family typewriter
\size small
 ymax
\family default
\size default
.
 It also has the 
\family typewriter
\size small
io_filter 
\family default
\size default
parameter described in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:filtering_siftr_analysis"

\end_inset

.
\end_layout

\begin_layout Subsubsection
Selecting statistic
\end_layout

\begin_layout Standard
The parameter 
\family typewriter
\size small
siftr_index
\family default
\size default
 defines the index of the column of the statistic to plot for SIFTR log
 files.
 The parameter 
\family typewriter
\size small
web10g_index
\family default
\size default
 defines the index of the column of the statistic to plot for Web10G log
 files.
 The start index for both parameters is 1, which selects the statistic in
 the first column.
 If one has only SIFTR or only Web10G log files the other index does not
 need to be specified.
 But for experiments with SIFTR 
\emph on
and
\emph default
 Web10G log files both indexes must be specified.
 By default both indexes are set to plot CWND.
 The lists of available statistics (including the column numbers) are in
 the SIFTR README 
\begin_inset CommandInset citation
LatexCommand cite
key "siftr-readme"

\end_inset

 and the Web10G documentation 
\begin_inset CommandInset citation
LatexCommand cite
key "web10g-stats"

\end_inset

.
\end_layout

\begin_layout Subsubsection
Adjusting y-axis label and scaler
\end_layout

\begin_layout Standard
The parameter 
\family typewriter
\size small
ylabel
\family default
\size default
 can be used to set the y-axis label to a user-defined string.
 The parameter 
\family typewriter
\size small
yscaler
\family default
\size default
 can be used to scale the extracted data values by a user-defined factor.
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard
We can plot the number of kilo bytes in the send buffer at any given time
 with the command:
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
This command works with web10g version 2.0.9 logs.
 Use web10g_index=116 when parsing web10g version 2.0.7 logs.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab analyse_tcp_stat:test_id= 20131206-102931_tcp_newreno,out_dir=./results,
 siftr_index=22,web10g_index=120, ylabel="Snd buf (kbytes)",yscaler=0.001
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
analyse_ackseq -- Plot acknowledged bytes or dupACKSs over time
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sub:analyse_ackseq"

\end_inset


\end_layout

\begin_layout Standard
This task plots the cumulative number of bytes acknowledged or the cumulative
 number of dupACKs for TCP flows.
 The task has the standard parameters 
\family typewriter
\size small
etime
\family default
\size default
, 
\family typewriter
\size small
lnames
\family default
\size default
, 
\family typewriter
\size small
min_values
\family default
\size default
, 
\family typewriter
\size small
omit_const
\family default
\size default
,
\family typewriter
\size small
 out_dir
\family default
\size default
,
\family typewriter
\size small
 out_name
\family default
\size default
, 
\family typewriter
\size small
pdf_dir
\family default
\size default
, 
\family typewriter
\size small
replot_only
\family default
\size default
,
\family typewriter
\size small
 source_filter
\family default
\size default
,
\family typewriter
\size small
 stime
\family default
\size default
, 
\family typewriter
\size small
test_id
\family default
\size default
, 
\family typewriter
\size small
ts_correct
\family default
\size default
, 
\family typewriter
\size small
ymin
\family default
\size default
, and
\family typewriter
\size small
 ymax
\family default
\size default
.
 
\end_layout

\begin_layout Standard
It also has the burst separation parameters 
\family typewriter
\size small
burst_sep
\family default
\size default
, 
\family typewriter
\size small
sburst
\family default
\size default
, 
\family typewriter
\size small
eburst
\family default
\size default
.
 If 
\family typewriter
\size small
burst_sep
\family default
\size default
 is set to 0, data will not be separated according to bursts and the plot
 will show acknowledged bytes or dupACKs for the whole flow.
 If 
\family typewriter
\size small
burst_sep
\family default
\size default
 is set to 1, each burst between idle times will be plotted as separate
 data series and the acknowledged bytes or dupACKs are normalised to that
 they are zero at the start of each burst.
 The parameters 
\family typewriter
\size small
sburst
\family default
\size default
 and 
\family typewriter
\size small
eburst
\family default
\size default
 can be used to select the bursts to be plotted (assuming 
\family typewriter
\size small
burst_sep
\family default
\size default
 is not set to 0).
 Both start with an index of 1.
 Setting 
\family typewriter
\size small
eburst=0
\family default
\size default
 means to end with the last burst.
\end_layout

\begin_layout Standard
Note that since analyse_ackseq processes the acknowledgement number stream,
 
\family typewriter
\size small
source_filter
\family default
\size default
 needs to be specified in the opposite direction as for other tasks.
 For example, if we want to plot the throughput for a source 172.16.10.60 we
 set 
\family typewriter
\size footnotesize
source_filter=S_172.16.10.60_*
\family default
\size default
, but to plot the acknowledged bytes for this source we have to use 
\family typewriter
\size footnotesize
source_filter=D_172.16.10.60_*
\family default
\size default
.
\end_layout

\begin_layout Subsubsection
Choosing between bytes and dupACKs
\end_layout

\begin_layout Standard
The parameter 
\family typewriter
\size small
dupacks
\family default
\size default
 allows to choose whether acknowledged bytes (
\family typewriter
\size small
dupacks
\family default
\size default
=0, default) or dupACKs (
\family typewriter
\size small
dupacks
\family default
\size default
=1) are plotted.
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard
The following shows an example of how to use the task to plot per burst
 acknowledged bytes omitting the first burst (assuming the gaps between
 bursts are at least 1 second long):
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab analyse_ackseq:test_id= 20131206-102931_tcp_newreno,out_dir=./results,
 burst_sep=1.0,sburst=2,eburst=0
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
anlyse_dash_goodput -- Plot DASH-like client goodput over time
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sub:plot-dash-goodput"

\end_inset


\end_layout

\begin_layout Standard
The analyse_dash_goodput task allows to plot the goodput for DASH-like traffic
 over time.
 The plot is based on data from the httperf log files of the DASH-like clients
 (named <test_id>_httperf_dash.log.gz).
 The task has the common parameters 
\family typewriter
\size small
etime
\family default
\size default
, 
\family typewriter
\size small
lnames
\family default
\size default
,
\family typewriter
\size small
 out_dir
\family default
\size default
,
\family typewriter
\size small
 out_name
\family default
\size default
, 
\family typewriter
\size small
pdf_dir
\family default
\size default
, 
\family typewriter
\size small
replot_only
\family default
\size default
,
\family typewriter
\size small
 stime
\family default
\size default
, 
\family typewriter
\size small
test_id
\family default
\size default
, 
\family typewriter
\size small
ts_correct
\family default
\size default
, 
\family typewriter
\size small
ymin
\family default
\size default
, and
\family typewriter
\size small
 ymax
\family default
\size default
.
 Note that 
\family typewriter
\size small
ts_correct
\family default
\size default
 has no effect for this task as the timestamps are not taken from log files,
 but are generated based on the nominal request times given by the configuration
 of the DASH-like client.
\end_layout

\begin_layout Subsubsection
Extracting data for specific experiments
\end_layout

\begin_layout Standard
By default the task extracts data from all client log files for all test
 IDs specified.
 However, if 
\family typewriter
\size small
dash_log_list
\family default
\size default
 is specified the task extracts the data from the log files listed in a
 text file (the value of 
\family typewriter
\size small
dash_log_list
\family default
\size default
 is the file name).
 This allows to explicitly list which dash client logs are used, and these
 files can also be from experiments with different test IDs.
 The format of the log list file is one file name per line.
 The paths do not need to be specified, as TEACUP will automatically find
 the files assuming they are in a sub directory below the fabfile.py directory.
\end_layout

\begin_layout Standard
Note that the number of legend names specified with 
\family typewriter
\size small
lnames
\family default
\size default
 must be equal to the number of files names specified in the log list file
 (if 
\family typewriter
\size small
dash_log_list
\family default
\size default
 is used) or equal to the number of log files with the specified test ID
 (if 
\family typewriter
\size small
dash_log_list
\family default
\size default
 is not used).
 
\end_layout

\begin_layout Subsubsection
Plot nominal goodput
\end_layout

\begin_layout Standard
By default analyse_dash_goodput will also plot the nominal goodput, i.e.
 goodput according to the DASH rate specified in the traffic generation
 configuration.
 The TC_NO_NOMINAL environment variable can be used to tell plot_dash_goodput
 to not plot this.
 If TC_NO_NOMINAL=1 the nominal goodput will not be plotted.
 Note that the task can only plot a maximum of 11 data series in a single
 graph.
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard
The task can be used as follows: 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab analyse_dash_goodput: dash_log_list=dash_logs.txt,out_dir=./results/,
 lnames="newreno;cdg;vegas"
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
analyse_goodput -- Plot TCP goodput over time
\end_layout

\begin_layout Standard
This task plots goodput for TCP flows.
 This task plots the total or per-flow goodput over time.
 The task has the standard parameters 
\family typewriter
\size small
etime
\family default
\size default
, 
\family typewriter
\size small
lnames
\family default
\size default
, 
\family typewriter
\size small
min_values
\family default
\size default
, 
\family typewriter
\size small
omit_const
\family default
\size default
,
\family typewriter
\size small
 out_dir
\family default
\size default
,
\family typewriter
\size small
 out_name
\family default
\size default
, 
\family typewriter
\size small
pdf_dir
\family default
\size default
, 
\family typewriter
\size small
replot_only
\family default
\size default
,
\family typewriter
\size small
 source_filter
\family default
\size default
,
\family typewriter
\size small
 stime
\family default
\size default
, 
\family typewriter
\size small
test_id
\family default
\size default
, 
\family typewriter
\size small
ts_correct
\family default
\size default
, 
\family typewriter
\size small
ymin
\family default
\size default
, and
\family typewriter
\size small
 ymax
\family default
\size default
.
 It also has the 
\family typewriter
\size small
total_per_experiment_parameter
\family default
\size default
.
\end_layout

\begin_layout Standard
Note that this task is work in progress.
 Currently, the goodput is computed based on the acknowledged bytes over
 time (extract_ackseq).
 This has the side effect that 
\family typewriter
\size small
source_filter
\family default
\size default
 needs to be specified in the opposite direction as for other tasks (see
 Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:analyse_ackseq"

\end_inset

).
 In the future it would be better to compute the goodput from the TCP sequence
 numbers directly.
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard
The following command generates a graph of total goodput for the source
 172.16.11.60:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab analyse_goodput:test_id= 20131206-102931_dash_2000_tcp_newreno, source_fil
ter=D_172.16.11.60_*, total_per_experiment=1
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
analyse_incast -- Plot response times over time (incast)
\end_layout

\begin_layout Standard
The task analyse_incast can be used to plot response times for incast experiment
s over time.
 It plots the response times as reported by httperf (httperf log files are
 present if incast traffic was generated).
 The task has the standard parameters 
\family typewriter
\size small
etime
\family default
\size default
, 
\family typewriter
\size small
lnames
\family default
\size default
, 
\family typewriter
\size small
min_values
\family default
\size default
, 
\family typewriter
\size small
omit_const
\family default
\size default
,
\family typewriter
\size small
 out_dir
\family default
\size default
,
\family typewriter
\size small
 out_name
\family default
\size default
, 
\family typewriter
\size small
pdf_dir
\family default
\size default
, 
\family typewriter
\size small
replot_only
\family default
\size default
,
\family typewriter
\size small
 source_filter
\family default
\size default
,
\family typewriter
\size small
 stime
\family default
\size default
, 
\family typewriter
\size small
test_id
\family default
\size default
, 
\family typewriter
\size small
ts_correct
\family default
\size default
, 
\family typewriter
\size small
ymin
\family default
\size default
, and
\family typewriter
\size small
 ymax
\family default
\size default
.
 
\end_layout

\begin_layout Standard
It also has the burst separation parameters 
\family typewriter
\size small
burst_sep
\family default
\size default
, 
\family typewriter
\size small
sburst
\family default
\size default
, and
\family typewriter
\size small
 eburst
\family default
\size default
 (explained in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:extract_rtt"

\end_inset

).
 These allow to select only a subset of the queries, aka bursts, to be plotted.
 
\family typewriter
\size small
sburst
\family default
\size default
 specified the first burst included in the plot (starting from index of
 1) and 
\family typewriter
\size small
eburst
\family default
\size default
 specifies the last burst included in the plot.
 By default, the plot will include the response time of all bursts.
 Note, that 
\family typewriter
\size small
sburst
\family default
\size default
 and 
\family typewriter
\size small
eburst
\family default
\size default
 are currently only supported for the default case of 
\family typewriter
\size small
tcpdump='0'
\family default
\size default
 (see below).
\end_layout

\begin_layout Subsubsection
Filtering on flows
\end_layout

\begin_layout Standard
Note that for analyse_incast flows are bidirectional, and the source of
 an incast flow is always the querier and the destination of an incast flow
 is always one of the responders.
 This needs to be taken into account when using 
\family typewriter
\size small
source_filter
\family default
\size default
.
 For example, to filter the response times for responder 172.16.11.61 one needs
 to specify 
\family typewriter
\size footnotesize
source_filter=D_172.16.11.60_*
\family default
\size default
.
\end_layout

\begin_layout Subsubsection
Boxplots instead of lines
\end_layout

\begin_layout Standard
The task has a 
\family typewriter
\size small
boxplot
\family default
\size default
 parameter.
 If this parameter is set to `1', instead of plotting one line for the response
 times of each flow, a boxplot is generated for each point in time that
 captures the distribution of response times over all flows (default is
 `0').
 
\end_layout

\begin_layout Subsubsection
Selecting data source
\end_layout

\begin_layout Standard
By default analyse_incast extracts the data from the httperf log files.
 Alternatively, if 
\family typewriter
\size small
tcpdump 
\family default
\size default
is set to `1' the task will extract the response times from the tcpdump
 files collected at the querier (time between seeing the GET and the last
 packet of the response).
 If 
\family typewriter
\size small
tcpdump 
\family default
\size default
is set to `1', the parameter 
\family typewriter
\size small
query_host 
\family default
\size default
must be set to the host name of the querier (as specified in the config
 file).
 
\end_layout

\begin_layout Subsubsection
Slowest response only
\end_layout

\begin_layout Standard
The task has a parameter 
\family typewriter
\size small
slowest_only
\family default
\size default
 (default is `0').
 If 
\family typewriter
\size small
slowest_only
\family default
\size default
 is set to `1', instead of plotting separate data for each flow, the task
 will only plot the slowest response time over all flows for each burst.
 If 
\family typewriter
\size small
slowest_only
\family default
\size default
 is set to `2', instead of plotting separate data for each flow, the task
 will only plot the time between the first request sent and the time the
 last response was finished for each burst (default is `0').
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard
The following shows an example where we plot the slowest response time for
 each burst based on the times in the httperf logs:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab analyse_incast: test_id=20140704-181632_incast_tcp_newreno, ,out_dir=./resu
lts/, slowest_only='1'
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The following shows an example where we plot the response times based on
 tcpdump data (assuming testhost1 was the querier):
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab analyse_incast: test_id=20140704-181632_incast_tcp_newreno, ,out_dir=./resu
lts/, tcpdump='1', query_host=testhost1
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
analyse_incast_iqtimes -- Plot inter-query times (incast)
\end_layout

\begin_layout Standard
This task plots the times between requests sent by the querier (for checking
 whether requests were sent close together in time).
 The task has the standard parameters 
\family typewriter
\size small
etime
\family default
\size default
, 
\family typewriter
\size small
lnames
\family default
\size default
, 
\family typewriter
\size small
min_values
\family default
\size default
, 
\family typewriter
\size small
omit_const
\family default
\size default
,
\family typewriter
\size small
 out_dir
\family default
\size default
,
\family typewriter
\size small
 out_name
\family default
\size default
, 
\family typewriter
\size small
pdf_dir
\family default
\size default
, 
\family typewriter
\size small
replot_only
\family default
\size default
,
\family typewriter
\size small
 source_filter
\family default
\size default
,
\family typewriter
\size small
 stime
\family default
\size default
, 
\family typewriter
\size small
test_id
\family default
\size default
, 
\family typewriter
\size small
ts_correct
\family default
\size default
, 
\family typewriter
\size small
ymin
\family default
\size default
, and
\family typewriter
\size small
 ymax
\family default
\size default
.
 It also has the parameter 
\family typewriter
\size small
query_host
\family default
\size default
 that must be used to specify the querier (name as specified in TPCONF_hosts)
 and the parameter 
\family typewriter
\size small
burst_sep
\family default
\size default
 that must be used to specify the time between request bursts (by default
 this is set to 1 second).
\end_layout

\begin_layout Subsubsection
Definition of inter-query time
\end_layout

\begin_layout Standard
By default inter-query time is defined as the time difference between a
 request and the first request in the same burst of requests.
 This allows to view how far query times are spread within each burst.
 To get a better idea of the timing jitter, the parameter 
\family typewriter
\size small
diff_to_burst_start
\family default
\size default
 can be set to `0', to compute the time differences between each request
 and the previous request within the same burst.
 
\end_layout

\begin_layout Subsubsection
No grouping by responders
\end_layout

\begin_layout Standard
By default response times are extracted and plotted separately (in different
 colours) for each responder.
 The parameter 
\family typewriter
\size small
by_responder
\family default
\size default
 can be set to `1' to extract only one file with all response times and
 plot the response time for all responders in the same colour.
\end_layout

\begin_layout Subsubsection
Cumulative response times
\end_layout

\begin_layout Standard
By default inter-query times are plotted against the time they occurred.
 The task also supports a cumulative plot mode to be able to analyse whether
 inter-query times significantly differ between different responders or
 different experiments.
 Setting the parameter 
\family typewriter
\size small
cumulative 
\family default
\size default
to `1' means the inter-query times will be plotted in a cumulative fashion.
 Instead of each y-value being the inter-query time, each y-value will be
 either the current inter-query time plus the duration of all previous bursts
 (if 
\family typewriter
\size small
by_responder
\family default
\size default
=0) or the current inter-query time plus all previous inter-query times
 (if 
\family typewriter
\size small
by_responder
\family default
\size default
=1).
 Note that if 
\family typewriter
\size small
cumulative 
\family default
\size default
is set to `1', 
\family typewriter
\size small
diff_to_burst_start
\family default
\size default
 should be set to `1' (the default), otherwise the resulting graph is hard
 to interpret.
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard
The following command plots the inter-query times as computed in different
 colours for each host (assuming the querier was testhost1):
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab analyse_incast_iqtimes: test_id=20140704-181632_incast_tcp_newreno,
 ,out_dir=./results/, query_host=testhost1, cumulative=0
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The following command plots the inter-query times in a cumulative fashion
 separately for each responder (again assuming the querier was testhost1):
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab analyse_incast_iqtimes: test_id=20140704-181632_incast_tcp_newreno,
 ,out_dir=./results/, query_host=testhost1, cumulative=1,by_responder=1
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
analyse_pktloss -- Plot packet loss rate
\end_layout

\begin_layout Standard
This task plots the packet loss rate in percent for emulated FPS game traffic
 flows.
 The task has the standard parameters 
\family typewriter
\size small
etime
\family default
\size default
, 
\family typewriter
\size small
lnames
\family default
\size default
, 
\family typewriter
\size small
min_values
\family default
\size default
, 
\family typewriter
\size small
omit_const
\family default
\size default
,
\family typewriter
\size small
 out_dir
\family default
\size default
,
\family typewriter
\size small
 out_name
\family default
\size default
, 
\family typewriter
\size small
pdf_dir
\family default
\size default
, 
\family typewriter
\size small
replot_only
\family default
\size default
,
\family typewriter
\size small
 source_filter
\family default
\size default
,
\family typewriter
\size small
 stime
\family default
\size default
, 
\family typewriter
\size small
test_id
\family default
\size default
, 
\family typewriter
\size small
ts_correct
\family default
\size default
, 
\family typewriter
\size small
ymin
\family default
\size default
, and
\family typewriter
\size small
 ymax
\family default
\size default
.
 Packet loss is computed from the raw data by computing the percentage of
 lost packets for each time window.
 The environment variables TC_AGGR_WINDOW_SIZE and TC_AGGR_INT_FACTOR can
 be used to control the window size and oversampling.
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard
The following command plots the packet loss rate for two game traffic flows
 originating from the same source:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab analyse_pktloss: test_id=20141003-111821_game_traffic_aqm_pfifo, ,out_dir=.
/results/, source_filter=
\begin_inset Quotes erd
\end_inset

S_172.16.10.2:10000; S_172.16.10.2:10001
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
analyse_cmpexp -- Plot metric depending on experiment variables 
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sub:plot-metric-comparison"

\end_inset


\end_layout

\begin_layout Standard
The task analyse_cmpexp allows to plot the metrics `throughput', `spprtt',
 `tcprtt' (unsmoothed/ERTT), `cwnd', `tcpstat', `ackseq', `restime' and
 `iqtime' depending on the different experiment parameters for different
 selected flows.
 It can show the metric distribution as boxplots (default), or plot the
 mean or median.
 The task has the standard parameters 
\family typewriter
\size small
etime
\family default
\size default
, 
\family typewriter
\size small
lnames
\family default
\size default
, 
\family typewriter
\size small
min_values
\family default
\size default
, 
\family typewriter
\size small
omit_const
\family default
\size default
,
\family typewriter
\size small
 out_dir
\family default
\size default
,
\family typewriter
\size small
 out_name
\family default
\size default
, 
\family typewriter
\size small
pdf_dir
\family default
\size default
, 
\family typewriter
\size small
replot_only
\family default
\size default
,
\family typewriter
\size small
 source_filter
\family default
\size default
,
\family typewriter
\size small
 stime
\family default
\size default
, 
\family typewriter
\size small
ts_correct
\family default
\size default
, 
\family typewriter
\size small
ymin
\family default
\size default
, and
\family typewriter
\size small
 ymax
\family default
\size default
.
 However, a few of these parameters are handled slightly differently (explained
 below).
\end_layout

\begin_layout Subsubsection
Specifying test IDs
\end_layout

\begin_layout Standard
The task has no 
\family typewriter
\size footnotesize
test_id
\family default
\size default
 parameter.
 The 
\family typewriter
\size footnotesize
exp_list
\family default
\size default
 parameter allows to specify a text file containing the list of experiments
 as for analyse_all (one experiment ID per line), making it possible to
 precisely select which combinations of parameters should be considered.
 For example, we can remove certain parameter values by removing all test
 IDs with these values from the list passed via 
\family typewriter
\size footnotesize
exp_list
\family default
\size default
.
 Note that all experiments to be compared must have the same test ID prefix
 and the same parameters varied.
\end_layout

\begin_layout Subsubsection
Specifying the test ID prefix
\end_layout

\begin_layout Standard
Prior to version 0.9 TEACUP identified which variables were used and what
 their names are in the log file names from the config.py file (TPCONF_vary_param
eters and TPCONF_parameter_list).
 This meant that at the time of running analyse_cmpexp, the TPCONF_vary_paramete
rs in config.py had to be the configuration used for the experiment(s) specified
 in 
\family typewriter
\size footnotesize
exp_list
\family default
\size default
.
\end_layout

\begin_layout Standard
Since version 0.9 TEACUP identifies which variables were used and what their
 names are from the experiment file names directly and does not need to
 access config.py.
 In order to reliable detect the parameter names, the user must specify
 the test ID prefix format (as regular expression) using the parameter 
\family typewriter
\size footnotesize
test_id_prefix
\family default
\size default
.
 By default the parameter is set to `[0-9]{8}
\backslash
-[0-9]{6}_experiment' (to match the default 
\family typewriter
YYYYMMDD_HHMMSS_experiment
\family default
 format for test ID prefixes).
\end_layout

\begin_layout Subsubsection
Intermediate files and final graphs
\end_layout

\begin_layout Standard
Intermediate data must already exist from previous executions of extract
 or analyse tasks, or analyse_cmpexp will trigger extraction of the data
 itself using the appropriate extract task(s).
 This extraction process is controlled by the parameter 
\family typewriter
\size footnotesize
res_dir
\family default
\size default
.
 
\end_layout

\begin_layout Standard
If 
\family typewriter
\size footnotesize
res_dir
\family default
\size default
 is set and points to the existing intermediate files
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
E.g.
 The location given by the 
\family typewriter
\size footnotesize
out_dir
\family default
\size default
 parameter to the previously run extract or analyse.
\end_layout

\end_inset

, analyse_cmpexp will search for and use the existing files.
 If files are missing analyse_cmpexp will abort.
 If 
\family typewriter
\size footnotesize
res_dir
\family default
\size default
 is an empty string or unspecified, analyse_cmpexp will run the necessary
 extract tasks and the extracted data will be placed in 
\family typewriter
\size footnotesize
out_dir 
\family default
\size default
(if set) or in the experiment directory (default).
 If you want analyse_cmpexp to explicitly (re-)run the data extraction,
 leave 
\family typewriter
\size footnotesize
res_dir
\family default
\size default
 unset and (optionally) set 
\family typewriter
\size footnotesize
out_dir
\family default
\size default
 with the desired destination for the extracted intermediate files.
\end_layout

\begin_layout Subsubsection
Controlling which data to plot
\end_layout

\begin_layout Standard
The 
\family typewriter
\size footnotesize
variables
\family default
\size default
 parameter can be a semicolon-separated list of variable names (names as
 used in the log file names) with associate values (separated by an equal
 sign).
 This provides a simple filter, as only experiments are considered where
 the variable(s) had the value(s) specified.
 Note that the equals (=) must be escaped with backslashes, otherwise Fabric
 will parse these.
\end_layout

\begin_layout Standard
The parameter 
\family typewriter
\size footnotesize
source_filter
\family default
\size default
 works as explained in Section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Data-series-selection"

\end_inset

 and must be specified to control for which flows the metrics will be plotted.
\end_layout

\begin_layout Subsubsection
Plot type
\end_layout

\begin_layout Standard
The 
\family typewriter
\size footnotesize
metric
\family default
\size default
 parameter specifies the metric to plot: `throughput' (default), `spprtt',
 `tcprtt' (unsmoothed/ERTT), `cwnd', `tcpstat', `ackseq', `restime' and
 `iqtime'.
 The 
\family typewriter
\size footnotesize
ptype
\family default
\size default
 parameter specifies the plot type: `box' (default), `mean', or `median'.
 
\end_layout

\begin_layout Subsubsection
Plot scaling, legend and labeling
\end_layout

\begin_layout Standard
The 
\family typewriter
\size footnotesize
ymin
\family default
\size default
 and 
\family typewriter
\size footnotesize
ymax
\family default
\size default
 parameters allow to specify custom minimum and maximum values for the y-axis
 (as for the other analyse tasks).
 The 
\family typewriter
\size footnotesize
lnames
\family default
\size default
 parameter allows to specify the legend names used as list of semicolon-separate
d strings (as for the other analyse tasks).
 Note, the number of legend strings must the same as the number of source
 filters.
 By default the legend names are the source filters specified.
 
\end_layout

\begin_layout Standard
The 
\family typewriter
\size footnotesize
stime
\family default
\size default
 and 
\family typewriter
\size footnotesize
etime
\family default
\size default
 parameters allow to plot data for selected time windows only.
 In contrast to the other tasks this is not zooming (as there is no time
 axis), but all the data series are actually filtered to only contain values
 from inside the time window prior to plotting the data.
\end_layout

\begin_layout Standard
Currently it is not possible to reorder the different parameters for plotting
 other than by generating a custom experiment ID list.
 The default order is the order specified in the config (which is the same
 as the order in the file names).
 By default the x-axis labels contains all variable parameters, even the
 ones that had only one value (and were de-facto constant).
 The Boolean parameter 
\family typewriter
\size footnotesize
omit_const_xlab_vars
\family default
\size default
 allows to automatically exclude constant variables from the x-axis labels.
 If set to `1' any variables that always had the same value in all experiments
 do not appear in the x-axis labels.
\end_layout

\begin_layout Subsubsection
Grouping flows
\end_layout

\begin_layout Standard
By default analyse_cmpexp groups experiments by traffic flow, meaning each
 group in the plot is for one traffic flow, identified by a unique flow
 tuple (source IP, source port, destination IP, destination port), regardless
 of the series of experiments (test ID prefix) in which the traffic was
 produced.
 The Boolean parameter 
\family typewriter
\size footnotesize
group-by-experiment
\family default
\size default
 allows to group by test ID prefix instead by setting 
\family typewriter
\size footnotesize
group-by-experiment=1
\family default
\size default
.
 With this each group in the plot relates to a particular series of experiments
 (identified by a test ID prefix) and the actual flow tuples can differ
 for different test ID prefixes.
 Of course in this case the number of (filtered) flows must be the same
 for all series of experiments and also the flows must be comparable across
 different series, i.e.
 the same type of test traffic was used in all series of experiments.
\end_layout

\begin_layout Subsubsection
Merging data
\end_layout

\begin_layout Standard
The parameter 
\family typewriter
\size footnotesize
merge_data
\family default
\size default
 specifies whether to merge the extracted data over all flows/responders
 per experiment.
 By default (
\family typewriter
\size footnotesize
merge_data=0
\family default
\size default
) data for each flow/responder is plotted as separate box/median/mean.
 If 
\family typewriter
\size footnotesize
merge_data=1
\family default
\size default
 only one box/median/mean will be plotted for each experiment.
 Note, TEACUP simply merges all types of data -- the user must decide whether
 merging actually makes sense.
\end_layout

\begin_layout Subsubsection
Metric specific parameters
\end_layout

\begin_layout Standard
The task has a number of metric specific parameters that are passed to the
 appropriate extract functions and/or select the data columns in the interim
 data files needed.
 
\end_layout

\begin_layout Standard
The parameter 
\family typewriter
\size footnotesize
link_len
\family default
\size default
 defines whether to use IP layer packet length or link layer packet length
 for metric `throughput' (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:extract_pktsizes"

\end_inset

).
 The parameter 
\family typewriter
\size footnotesize
smoothed
\family default
\size default
 defines the type of RTT for metric `tcprtt' (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:analyse_tcp_rtt"

\end_inset

).
 The parameter 
\family typewriter
\size footnotesize
stat_index 
\family default
\size default
defines the statistic to be extracted and plotted for metric `tcpstat' (see
 Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:extract_tcp_stat"

\end_inset

).
 The parameter 
\family typewriter
\size footnotesize
dupacks 
\family default
\size default
defines whether to plot acknowledged bytes or dupACKs for metric `ackseq'
 (see Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:analyse_ackseq"

\end_inset

), and the parameter 
\family typewriter
\size footnotesize
cum_ackseq 
\family default
\size default
specifies whether to plot the cumulative values (
\family typewriter
\size footnotesize
cum_ackseq=1
\family default
\size default
) or averages per time window (
\family typewriter
\size footnotesize
cum_ackseq=0
\family default
\size default
).
 The parameters 
\family typewriter
\size footnotesize
sburst
\family default
\size default
 and 
\family typewriter
\size footnotesize
eburst
\family default
\size default
 can be used to select the bursts for metrics `ackseq' and `restime'.
 The parameter 
\family typewriter
\size small
slowest_only
\family default
\size default
 can be used to plot the slowest response time for each burst, or the time
 between the first request sent and the last response finished (see Section
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:extract_incast"

\end_inset

).
\end_layout

\begin_layout Subsubsection
Response time special modes
\end_layout

\begin_layout Standard
If metric is set to `restime', the parameter 
\family typewriter
\size footnotesize
res_time_mode
\family default
\size default
 controls special plot modes for response time plots.
 If 
\family typewriter
\size footnotesize
res_time_mode
\family default
\size default
 is set to 0 the plot is generated as normal.
 
\end_layout

\begin_layout Standard
If 
\family typewriter
\size footnotesize
res_time_mode
\family default
\size default
 is set to 1 in addition to the observed response times the nominal response
 time is plotted as points.
 This only works if the parameters `incSz' (block size), `down' (bandwidth),
 and `responders' (number of responders) are present in all the interim
 data file names.
\begin_inset Foot
status open

\begin_layout Plain Layout
We assume responder to querier traffic was considered the `downstream' direction
 during the actual TEACUP experiment
\end_layout

\end_inset

 The nominal response time is computed as: block_size * number_of_responders
 / (bandwidth / 8).
\end_layout

\begin_layout Standard
If 
\family typewriter
\size footnotesize
res_time_mode
\family default
\size default
 is set to 2 
\emph on
and
\emph default
 
\family typewriter
\size footnotesize
ptype
\family default
\size default
 is set to `median' or `mean', the ratio of observed median/mean response
 time and nominal response time is plotted.
 This only works if the nominal response time can be computed as described
 above.
\end_layout

\begin_layout Subsubsection
Environment variables
\end_layout

\begin_layout Standard
The plotting can be further controlled by task-specific environment variables.
 
\end_layout

\begin_layout Standard
The variable TC_OUTLIER_QUANT removes any points in the lowest TC_OUTLIER_QUANT
 and highest TC_OUTLIER_QUANT quantiles.
 For example, specifying TC_OUTLIER_QUANT=0.01 will remove all data points
 that fall in the <0.01 quantile and all data points that fall in the >0.99
 quantile.
 
\end_layout

\begin_layout Standard
Setting TC_NICER_XLABS=1 will modify the plotting of x-axis labels so that
 variable names are plotted once (on the left side) and only the variable
 values will be plotted at each tick.
 The environment variables TC_YMAX_INC, TC_AGGR_WIN_SIZE, and TC_AGGR_INT_FACTOR
 can also be used and work as explained in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:plot-env-vars"

\end_inset

.
\end_layout

\begin_layout Standard
The variable TC_DIFF=1 can be set to convert cumulative data into non-cumulative
 data.
 Effectively the data vector of non-cumulative values is generated by taking
 the differences of subsequent values of the original cumulative data vector.
\end_layout

\begin_layout Standard
The variable TC_NO_BARS=1 can be set to plot points instead of the default
 bars when 
\family typewriter
\size footnotesize
ptype
\family default
\size default
 is set to `median' or `mean'.
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard
The following command shows an example, where we plot TCP RTT as boxplots:
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab analyse_cmpexp:exp_list= myexp_list.txt,res_dir="./results/", variables="run
\backslash
=0", source_filter= "D_172.16.10.2_5001;D_172.16.10.3_5006", metric=tcprtt, lnames="CD
G;Newreno"
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
analyse_2_density -- Plot two metrics against each other depending on experiment
 variables
\end_layout

\begin_layout Standard
The analyse_2_density task can create 2-dimensional density plots or ellipse
 plots allowing to explore the relationship between two metrics depending
 on different experiment parameter combinations.
 It supports the same metrics as analyse_cmpexp: `throughput', `spprtt',
 `tcprtt' (unsmoothed/ERTT), `cwnd', `tcpstat', `ackseq', `restime' and
 `iqtime'.
 The task has the standard parameters 
\family typewriter
\size small
out_dir
\family default
\size default
, 
\family typewriter
\size small
replot_only
\family default
\size default
, 
\family typewriter
\size small
source_filter
\family default
\size default
,
\family typewriter
\size small
 ymin
\family default
\size default
, 
\family typewriter
\size small
ymax
\family default
\size default
, 
\family typewriter
\size small
lnames
\family default
\size default
, 
\family typewriter
\size small
out_name
\family default
\size default
, 
\family typewriter
\size small
min_values
\family default
\size default
, 
\family typewriter
\size small
ts_correct
\family default
\size default
, and 
\family typewriter
\size small
pdf_dir
\family default
\size default
.
 A few of these parameters are handled slightly differently (explained below).
\end_layout

\begin_layout Standard
Please note that this task is somewhat experimental and still under development.
\end_layout

\begin_layout Subsubsection
Specifying test IDs
\end_layout

\begin_layout Standard
The task has no 
\family typewriter
\size footnotesize
test_id
\family default
\size default
 parameter.
 The 
\family typewriter
\size footnotesize
exp_list
\family default
\size default
 parameter allows to specify a text file containing the list of experiments
 as for analyse_cmpexp.
 Also, as for analyse_cmpexp, the parameter 
\family typewriter
\size footnotesize
test_id_prefix
\family default
\size default
 must be specified in case the test ID prefix used is not the standard prefix.
\end_layout

\begin_layout Subsubsection
Intermediate files and final graphs
\end_layout

\begin_layout Standard
Intermediate data must already exist from previous executions of extract
 or analyse tasks, or analyse_2d_density will trigger extraction of the
 data itself using the appropriate extract task(s).
 This extraction process is controlled by the parameter 
\family typewriter
\size footnotesize
res_dir
\family default
\size default
 as described for analyse_cmpexp.
\end_layout

\begin_layout Subsubsection
Controlling which data to plot
\end_layout

\begin_layout Standard
The 
\family typewriter
\size footnotesize
variables
\family default
\size default
 parameter can be a semicolon-separated list of variable names (names as
 used in the log file names) with associate values (separated by an equal
 sign).
 This provide a simple filter, as only experiments are considered where
 the variable(s) had the value(s) specified.
 Note that the equals (=) must be escaped with backslashes, otherwise Fabric
 will parse these.
\end_layout

\begin_layout Standard
The parameter 
\family typewriter
\size footnotesize
source_filter
\family default
\size default
 works as explained in Section
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Data-series-selection"

\end_inset

 and must be specified to control for which flows the metrics will be plotted.
\end_layout

\begin_layout Subsubsection
Plot type
\end_layout

\begin_layout Standard
The 
\family typewriter
\size footnotesize
xmetric
\family default
\size default
 parameter specifies the metric for the x-axis and the 
\family typewriter
\size footnotesize
ymetric
\family default
\size default
 parameter specifies the metric for the y-axis.
 Both parameter values must be selected from the set of available metrics.
\end_layout

\begin_layout Subsubsection
Axis limits
\end_layout

\begin_layout Standard
Instead of the usual parameters 
\family typewriter
\size small
stime
\family default
\size default
,
\family typewriter
\size small
 etime
\family default
\size default
, analyse_2d_density has the parameters 
\family typewriter
\size small
xmin
\family default
\size default
,
\family typewriter
\size small
 xmax
\family default
\size default
 for limiting the x-axis values.
 Note that due to the internals of a different plotting function used (R
 ggplot2), the parameters 
\family typewriter
\size small
xmin
\family default
\size default
,
\family typewriter
\size small
 xmax
\family default
\size default
,
\family typewriter
\size small
 ymin
\family default
\size default
,
\family typewriter
\size small
 ymax 
\family default
\size default
do not only zoom-in on the data, they actually filter out any data points
 outside of the specified limits.
\end_layout

\begin_layout Subsubsection
Grouping
\end_layout

\begin_layout Standard
The parameter 
\family typewriter
\size small
group_by
\family default
\size default
 can be used to specify the different groups.
 Each group will be plotted in a different colour and will appear as a separate
 entry in the legend.
 The value must be set to the name of a parameter varied during the experiment
 (the name of the variable in the file names).
 By default 
\family typewriter
\size small
group_by
\family default
\size default
 is set to `aqm'.
\end_layout

\begin_layout Subsubsection
Merging data
\end_layout

\begin_layout Standard
The parameters 
\family typewriter
\size footnotesize
merge_xdata
\family default
\size default
 and 
\family typewriter
\size footnotesize
merge_ydata
\family default
\size default
 specify whether to merge the extracted data over all flows/responders per
 experiment for the x-axis and/or y-axis.
 If set to `0' data is extracted per flow/responder and for the plot a single
 flow needs to be selected with 
\family typewriter
\size footnotesize
source_filter
\family default
\size default
.
 If set to `1' 
\family typewriter
\size footnotesize
source_filter
\family default
\size default
 can be used to select multiple flows, i.e.
 by using a wildcard for the port number, and the data for all flows will
 be merged.
 Note that TEACUP simply merges all types of data, it is the user's responsibili
ty to decide whether it makes sense to merge the data.
\end_layout

\begin_layout Subsubsection
Metric specific parameters
\end_layout

\begin_layout Standard
The task has a number of metric specific parameters that are passed to the
 extract functions and/or select the data columns in the interim data files
 needed.
 It has all the metric-specific parameters of analyse_cmpexp, except 
\family typewriter
\size footnotesize
stat_index
\family default
\size default
.
 Instead of 
\family typewriter
\size footnotesize
stat_index 
\family default
\size default
analyse_2d_density has the parameters 
\family typewriter
\size footnotesize
xstat_index
\family default
\size default
 and 
\family typewriter
\size footnotesize
ystat_index
\family default
\size default
 to specify the indexes for both axes.
 
\family typewriter
\size footnotesize
xstat_index
\family default
\size default
 must be set if 
\family typewriter
\size footnotesize
xmetric=tcpstat
\family default
\size default
 and 
\family typewriter
\size footnotesize
ystat_index
\family default
\size default
 must be set if 
\family typewriter
\size footnotesize
ymetric=tcpstat
\family default
\size default
.
\end_layout

\begin_layout Subsubsection
Environment variables
\end_layout

\begin_layout Standard
The plotting can be further controlled by task-specific environment variables.
 
\end_layout

\begin_layout Standard
The variable TC_OUTLIER_QUANT removes any points in the lowest TC_OUTLIER_QUANT
 and highest TC_OUTLIER_QUANT quantiles.
 For example, specifying TC_OUTLIER_QUANT=0.01 will remove all data points
 that fall in the <0.01 quantile and all data points that fall in the >0.99
 quantile.
\end_layout

\begin_layout Standard
The variable TC_ELLIPSE controls whether a 2D density plot or a ellipse
 plot will be created.
 By default 2D density plots are created (TC_ELLIPSE=0).
 To create ellipse plots instead set TC_ELLIPSE=1.
 For 2D density plots the PDF files have a `2d_density_plot.pdf' extension
 whereas for ellipse plots the PDF files have a `ellipse_plot.pdf' extension.
\end_layout

\begin_layout Standard
The variable TC_BINS can be used to set the number of bins for the 2D density
 estimation (only effective if TC_ELLIPSE=0).
 By default the number of bins is set to 4.
 The variable TC_ADD_RAND can be used to add randomness to the data (noise
 is drawn from a uniform distribution within the interval of (-0.5, 0.5)).
 By default no randomness is added.
 If 2D density should be plotted (TC_ELLIPSE=0) and the data consists of
 discrete values, the resulting graphs can look better with added randomness
 (TC_ADD_RAND=1).
\end_layout

\begin_layout Standard
The variable TC_MEDIAN can be set to 1 to plot the median for each group.
 By default the task does not plot the median.
 The variable TC_NO_LEGEND can be set to 1 to suppress the legend, which
 by default is shown to the right of the graph.
\end_layout

\begin_layout Standard
By default only the estimations or ellipses are plotted.
 The variable TC_SCATTER can be set to 1 to superimpose a scatter plot of
 all points on the 2D density or ellipse plot.
\end_layout

\begin_layout Standard
The variable TC_DIFF=1 can be set to convert cumulative data into non-cumulative
 data.
 Effectively the data vector of non-cumulative values is generated by taking
 the differences of subsequent values of the original cumulative data vector.
\end_layout

\begin_layout Subsubsection
Examples
\end_layout

\begin_layout Standard
The following example command plots a 2D density plot for traffic going
 to a particular destination (172.16.11.68 port 5000) with throughput as metric
 on the x-axis and TCP RTT as metric on the y-axis, and three different
 groups based on the AQM method that was used (FIFO, Codel, PIE):
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> TC_ADD_RAND=1 fab analyse_2d_density: exp_list= myexp_list.txt,res_dir="./result
s/", variables="run
\backslash
=0",source_filter= "D_172.16.11.68_5000",xmetric=throughput, ymetric=tcprtt,link_le
n=1, group_by=
\begin_inset Quotes erd
\end_inset

aqm
\begin_inset Quotes erd
\end_inset

,lnames="fifo;codel;pie"
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The following example command is the same as the previous, except that now
 we plot an ellipse plot instead of a 2D density plot:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> TC_ELLIPSE=1 TC_ADD_RAND=1 fab analyse_2d_density: exp_list=myexp_list.txt,res_
dir="./results/", variables="run
\backslash
=0",source_filter= "D_172.16.11.68_5000",xmetric=throughput, ymetric=tcprtt,link_le
n=1, group_by=
\begin_inset Quotes erd
\end_inset

aqm
\begin_inset Quotes erd
\end_inset

,lnames="fifo;codel;pie"
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Limits on series/groups per graph
\end_layout

\begin_layout Standard
Currently the underlying plot function for all time series graphs, such
 as analyse_throughput, analyse_spp_rtt, analyse_cwnd, analyse_tcp_rtt,
 and analyse_tcp_stat, can only plot 12 different time series on a single
 graph.
 If the number of data series to plot is larger than 12, multiple graphs
 are generated with a _<graph_number> at the end of each file name to indicate
 the number of the graph in the series of graphs (graph number starting
 from 1).
 
\end_layout

\begin_layout Standard
The number of groups (corresponding to legend entries) that can be plotted
 in one graph with analyse_cmpexp and analyse_2d_density is limited to 12.
\end_layout

\begin_layout Section
Customise Plotting
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sec:customising_plotting"

\end_inset


\end_layout

\begin_layout Standard
The previous section explained some environment variables that a user can
 use to customise the plotting.
 Internally, TEACUP also sets a variety of other environment variables and
 passes them to the plotting script.
 The plotting script reads these environment variables and generates the
 plot based on their values.
 For example, TEACUP sets a variable TC_YLAB with the value being the label
 string plotted on the y-axis.
 All existing environment variables are explained at the beginning of each
 default plot script and the parameters passed are also explained in the
 TEACUP code calling the script (analyse.py).
\end_layout

\begin_layout Standard
All analyse tasks have a parameter called 
\family typewriter
\size small
plot_params
\family default
\size default
 that can be used to override any of the environment variables.
 This allows the user to customise things for which there is no TEACUP task
 parameter, such as the y-axis label.
 For example, we can set environment variables to plot the throughput in
 Megabits per second instead of the default kilobits per second as follows
 (note that any '=' must be escaped, so they are not interpreted by Fabric):
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> fab analyse_throughput:test_id= 20131206-102931_dash_2000_tcp_newreno,
 plot_params="TC_YLAB
\backslash
=
\backslash
"Throughput (mbps)
\backslash
" TC_YSCALER
\backslash
=0.000008" 
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Furthermore, all analyse tasks have a parameter called 
\family typewriter
\size small
plot_script
\family default
\size default
 that can be used to specify the script used for plotting.
 If this parameter is set, the specified script will be executed instead
 of the default script.
 The default plotting scripts are R scripts located in the teacup source
 directory, so by default 
\family typewriter
\size small
plot_script
\family default
\size default
 looks like this:
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily}"
inline false
status open

\begin_layout Plain Layout

R CMD BATCH --vanilla  
\end_layout

\begin_layout Plain Layout

    <TPCONF_script_path>/<R_script>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The simplest way of customising things is to create a modified R script
 (say <my_R_script>) based on the original plotting script (<R_script>).Then
 one can simply set 
\family typewriter
\size small
plot_script
\family default
\size default
 to:
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily}"
inline false
status open

\begin_layout Plain Layout

R CMD BATCH --vanilla 
\end_layout

\begin_layout Plain Layout

    <TPCONF_script_path>/<my_R_script>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
However, one could also specify an entirely different script written in
 an entirely different scripting language.
\end_layout

\begin_layout Standard
The plot script gets its input from TEACUP via the environment variables.
 The plot script is called with a single command line argument, which is
 a file name for logging output from the script, e.g.
 log messages, warning, or errors.
 The output file is only created if TPCONF_debug_level is greater than 0
 (see 
\begin_inset CommandInset citation
LatexCommand cite
key "zander2015caia_teacup_v1.0"

\end_inset

).
 The name of the log file is currently hard-coded and corresponds to the
 name of the default R script used for plotting.
\end_layout

\begin_layout Section
Utility Functions
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sec:Utility"

\end_inset


\end_layout

\begin_layout Standard
This section describes some analysis and plotting related utility functions
 TEACUP provides.
 For example, TEACUP provides some functionality to combine multiple graphs
 into a single graph, so results can be compared more easily.
\end_layout

\begin_layout Subsection
Combining graphs
\end_layout

\begin_layout Standard
There are two simple shell scripts to combine different result graphs (different
 PDF files) on a single page for easy comparison.
\begin_inset Foot
status open

\begin_layout Plain Layout
These scripts require that the pdfjam package is installed (on FreeBSD this
 can be installed from the ports tree).
\end_layout

\end_inset

 The assumption is that the TCP congestion control algorithm is the innermost
 parameter varied (i.e.
 the last parameter in the file name).
 
\end_layout

\begin_layout Standard
The script 
\family typewriter
\size footnotesize
tcp_comparison.sh
\family default
\size default
 can be used to combine throughput, RTT, CWND or SPP RTT graphs for up to
 four different TCP congestion control algorithms on one page.
 For example, the following command creates four PDFs, each with four graphs
 for each TCP congestion control algorithm (assuming the test ID is 20131220-182
929_del_<delay>_tcp_<tcp_algo>):
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> tcp_comparison.sh 20131220-182929_del_10_tcp test
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The output files are:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily}"
inline false
status open

\begin_layout Plain Layout

test_cwnd_different_tcps.pdf 
\end_layout

\begin_layout Plain Layout

test_spprtt_different_tcps.pdf 
\end_layout

\begin_layout Plain Layout

test_tcprtt_different_tcps.pdf 
\end_layout

\begin_layout Plain Layout

test_throughput_different_tcps.pdf
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The second script 
\family typewriter
\size footnotesize
tcp_comparison_allinone.sh
\family default
\size default
 creates the same PDFs as above but in addition creates one single-page
 PDF with all throughput, RTT, CWND and SPP RTT graphs for up to four TCP
 congestion control algorithms (up to 16 graphs in total).
 It can be used as follows:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> tcp_comparison_allinone.sh 20131220-182929_del_10_tcp test
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The output files are:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily}"
inline false
status open

\begin_layout Plain Layout

test_cwnd_different_tcps.pdf 
\end_layout

\begin_layout Plain Layout

test_spprtt_different_tcps.pdf 
\end_layout

\begin_layout Plain Layout

test_tcprtt_different_tcps.pdf 
\end_layout

\begin_layout Plain Layout

test_throughput_different_tcps.pdf
\end_layout

\begin_layout Plain Layout

test_different_tcps_allinone.pdf
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The two scripts are not strictly limited to combining the results for different
 TCP congestion control algorithms.
 They can be used with any last parameter as long as there are no more than
 four values.
 However, part of the output file names is hard-coded.
\end_layout

\begin_layout Standard
To combine graphs with more flexibility one can use the script 
\family typewriter
\size footnotesize
combine_graphs.sh
\family default
\size default
, which is used by the scripts for TCP comparison.
 The script allows to combine an arbitrary number of graphs one one page.
 For example, if we want to compare the CWND graphs for two different delay
 values and four different TCP congestion control algorithms we can do this
 with the following command: 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout

\family typewriter
\size footnotesize
> combine_graphs.sh -c 4x2 -o test.pdf 
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
`find .
 -name 
\end_layout

\begin_layout Plain Layout

\family typewriter
\size footnotesize
20131220-182929_del_*_tcp_*cwnd*.pdf | sort`
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Here the 
\family typewriter
\size footnotesize
find
\family default
\size default
 command is used with wild-cards to select the PDF files to combine on one
 page and the 
\family typewriter
\size footnotesize
-c
\family default
\size default
 parameter is used to specify that the graphs are organised in a layout
 with 2 rows and 4 columns.
 Instead of using 
\family typewriter
\size small
find
\family default
\size default
 one can specify all file names explicitly.
 This allows for full control of the location of graphs on the single page,
 but is cumbersome if there are many graphs.
 Note that 
\family typewriter
\size footnotesize
combine_graphs.sh
\family default
\size default
 puts the graphs on the page row after row, i.e.
 for a 4x2 layout the first four graphs go in the first row, the second
 four graphs go in the second row, etc.
\end_layout

\begin_layout Section
Use Case -- Analysing an Incast Experiment
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sec:Examples"

\end_inset


\end_layout

\begin_layout Standard
In this use case we analyse the data from incast experiments carried out
 with TEACUP where one Linux querier sent quasi-simultaneous queries to
 multiple Linux responders in fixed five-second time intervals.
 Over successive experiments we have increased the number of responders
 from 4 to 12.
 Upstream/downstream bandwidth was 50
\begin_inset space \thinspace{}
\end_inset

Mpbs, emulated delay was 1
\begin_inset space \thinspace{}
\end_inset

ms, the buffer size of the bottleneck was 120 packets, and the size of the
 responses was 512
\begin_inset space \thinspace{}
\end_inset

kB.
 TCP was Linux Cubic and the AQM was varied.
\end_layout

\begin_layout Subsection
Analysing throughput and RTT
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sub:Incast-basic-analysis"

\end_inset


\end_layout

\begin_layout Standard
First, we use analyse_throughput to plot throughput.
 We filter so that only the flows from the responder are included as the
 flows from the querier are mainly ACKs after the initial query (using source_fi
lter).
 We reduce the point size in the plot with POINT_SIZE and tweak the window
 for throughput calculations with TC_AGGR_WIN_SIZE and TC_AGGR_INT_FACTOR
 (the default window settings are inappropriate for short sub-second traffic
 bursts).
 We use plot_params to change from the default kbps to Mbps.
 We only plot the first two bursts (by setting etime=6), since all bursts
 look relatively similar and we are interested to see more details for single
 bursts.
 We set link_len=1 to plot throughput including link-layer headers.
 The following shows the command:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
> TC_POINT_SIZE=0.25 TC_AGGR_WIN_SIZE=0.05 TC_AGGR_INT_FACTOR=10 fab analyse_throu
ghput:test_id= 20150218-135735_experiment_aqm_pfifo_responders_4, out_dir=../resul
t,link_len=1,source_filter= "S_172.16.11.61_80; S_172.16.1 1.62_81;S_172.16.11.63_82;S_17
2.16.11.64_83", etime=6,plot_params='TC_YLAB
\backslash
="Throughput (mbps)" TC_YSCALER
\backslash
=0.000008'
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Next, we use analyse_rtt to plot the RTT.
 The parameters used are a subset of the above:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
> TC_POINT_SIZE=0.25 fab analyse_rtt:test_id= 20150218-135735_experiment_aqm_pfif
o_responders_4, out_dir=../results,source_filter="S_172.16.11.61_80; S_172.16.11.62_81;S
_172.16.11.63_82; S_172.16.11.64_83",etime=6
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Throughput-and-RTT"

\end_inset

 shows the throughput and RTT figures for the experiment with 4 responders.
 The throughput graph shows that the throughput varies depending on the
 responder.
 For example, in the first part of the first burst responders 1, 3 and 4
 have roughly 12--15
\begin_inset space \thinspace{}
\end_inset

mpbs whereas responder 2 has 7--10
\begin_inset space \thinspace{}
\end_inset

mbps, and only when the first three responders are finishing responder 2
 is catching up.
 The second burst is even more unequal with responders 1 and 3 getting a
 higher share of the bandwidth at the start, and responder 2 and 4 catching
 up later.
 The RTT estimated by SPP reaches up to 29
\begin_inset space \thinspace{}
\end_inset

ms with is the theoretical limit (1500 byte packet size multiplied with
 120 buffer slots divided by 50
\begin_inset space \thinspace{}
\end_inset

mbps).
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement t
wide true
sideways false
status open

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename graphs/20150218-135735_experiment_tcp_cubic_del_1_aqm_pfifo_responders_4_down_50mbit_up_50mbit_incPer_5_incSz_512_bs_120_ecn_0_run_0_throughput_time_series.pdf
	scale 85
	BoundingBox 0bp 0bp 290bp 206bp
	clip

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Throughput
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename graphs/20150218-135735_experiment_tcp_cubic_del_1_aqm_pfifo_responders_4_down_50mbit_up_50mbit_incPer_5_incSz_512_bs_120_ecn_0_run_0_spprtt_time_series.pdf
	scale 85
	BoundingBox 0bp 0bp 290bp 206bp
	clip

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
RTT
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Throughput-and-RTT"

\end_inset

Throughput and RTT statistics for experiment with 4 responders
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Analysing time between queries
\end_layout

\begin_layout Standard
For incast experiments the goal is that the querier in each round/burst
 sends out the queries as closely together in time as possible.
 We now investigate the time gaps between queries for the experiment with
 4 responders.
 We use the analyse_incast_iqtimes task to plot the times between a query
 sent to a responder and the first query sent in each burst separately for
 all responders (by setting by_responder=1 and cumulative=1).
 The querier must be specified with query_host, in this case it was host
 newtcp20.
 The following shows the command: 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
> TC_POINT_SIZE=0.5 fab analyse_incast_iqtimes:test_id= 20150218-135735_experimen
t_aqm_pfifo_responders_4, out_dir=../results,query_host=newtcp20, by_responder=1,c
umulative=1 
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Incast-inter-query-times"

\end_inset

 shows the plot of inter-query times for the experiment with 4 responders.
 It shows that for the first 7 bursts the requests were sent very closely
 together within 2
\begin_inset space \thinspace{}
\end_inset

ms.
 However, from burst 8 onwards, the requests were sent more and more spread
 out with the request to responder 1 falling behind more and more.
 Still, even for the last burst all requests were sent within 9
\begin_inset space \thinspace{}
\end_inset

ms.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement tb
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename graphs/20150218-135735_experiment_tcp_cubic_del_1_aqm_pfifo_responders_4_down_50mbit_up_50mbit_incPer_5_incSz_512_bs_120_ecn_0_run_0_iqtimes_responders_time_series.pdf
	scale 85
	BoundingBox 0bp 0bp 290bp 206bp
	clip

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Incast-inter-query-times"

\end_inset

Incast inter-query times for experiment with 4 responders
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Analysing response times
\end_layout

\begin_layout Standard
Now let us have a look at the actual response times for the experiment with
 4 responders.
 To plot the response times over time for each responder separately, we
 use the analyse_incast task without any parameters (except that we use
 out_dir to put the interim data files and the PDF files in the desired
 directory):
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
> TC_POINT_SIZE=0.5 fab analyse_incast:test_id= 20150218-135735_experiment_aqm_pf
ifo_responders_4, out_dir=../results
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Incast-response-times"

\end_inset

 shows the response times over time for the different responders for the
 experiment with 4 responders.
 Response time varies for the different responders but in general is between
 0.3 and 0.35 seconds for all bursts.
 For the first two bursts we can see that response times are exactly as
 expected from the throughput graphs, e.g.
 in burst one responder 2 has the highest response time since it has the
 lowest throughput initially.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement tb
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename graphs/20150218-135735_experiment_tcp_cubic_del_1_aqm_pfifo_responders_4_down_50mbit_up_50mbit_incPer_5_incSz_512_bs_120_ecn_0_run_0_restime_time_series.pdf
	scale 85
	BoundingBox 0bp 0bp 290bp 206bp
	clip

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Incast-response-times"

\end_inset

Incast response times for experiment with 4 responders
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Analysing acknowledged bytes and dupACKs
\end_layout

\begin_layout Standard
To plot the acknowledged bytes and dupACKs we use the analyse_ackseq task.
 We set burst_sep to 1 second and select only the first and second burst
 with sburst=1 and eburst=2.
 We select the ACK flows corresponding to the data flows from the four responder
s using source_filter.
 Since the ACK flows travel in the opposite direction as the data, our source
 filters from Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Incast-basic-analysis"

\end_inset

 (which filtered the data coming 
\emph on
from
\emph default
 the various responders) now become filters that filter the ACKs going 
\emph on
to
\emph default
 the various responders.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\family typewriter
\size small

\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
> TC_POINT_SIZE=0.25 fab analyse_ackseq:test_id= 20150218-135735_experiment_aqm_p
fifo_responders_4, out_dir=../results,source_filter= "D_172.16.11.61_80;D_172.16.11.62_8
1; D_172.16.11.63_82;D_172.16.11.64_83", burst_sep=1,sburst=1,eburst=2
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Acknowledged-bytes"

\end_inset

 shows the acknowledged bytes per burst for each responder for the experiment
 with 4 responders.
 Again we can see that the download speed varies for the different responders
 with responder 2 being the slowest.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement tb
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename graphs/20150218-135735_experiment_tcp_cubic_del_1_aqm_pfifo_responders_4_down_50mbit_up_50mbit_incPer_5_incSz_512_bs_120_ecn_0_run_0_ackseqno_bursts_time_series.pdf
	scale 85
	BoundingBox 0bp 0bp 290bp 206bp
	clip

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Acknowledged-bytes"

\end_inset

Acknowledged bytes per burst and responder for experiment with 4 responders
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Response times versus number of responders
\end_layout

\begin_layout Standard
Finally, let us compare the response times for an increasing number of responder
s.
 To plot comparison graphs we use the analyse_cmpexp task.
 We create a file called explist.txt that contains the list of experiment
 IDs for all the experiments with different responders.
 The file has the following content:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily}"
inline false
status open

\begin_layout Plain Layout

20150218-135735_experiment_aqm_pfifo_responders_4
\end_layout

\begin_layout Plain Layout

20150218-135735_experiment_aqm_pfifo_responders_5
\end_layout

\begin_layout Plain Layout

20150218-135735_experiment_aqm_pfifo_responders_6
\end_layout

\begin_layout Plain Layout

20150218-135735_experiment_aqm_pfifo_responders_7
\end_layout

\begin_layout Plain Layout

20150218-135735_experiment_aqm_pfifo_responders_8
\end_layout

\begin_layout Plain Layout

20150218-135735_experiment_aqm_pfifo_responders_9
\end_layout

\begin_layout Plain Layout

20150218-135735_experiment_aqm_pfifo_responders_10
\end_layout

\begin_layout Plain Layout

20150218-135735_experiment_aqm_pfifo_responders_11
\end_layout

\begin_layout Plain Layout

20150218-135735_experiment_aqm_pfifo_responders_12
\end_layout

\end_inset


\end_layout

\begin_layout Standard
First, let us have a look at the first four responders.
 We specify source_filter to select the first four responders.
 We set metric to response time (`restime') and the type of plot to boxplot
 (`box').
 The PDF file name prefix is set to 
\begin_inset Quotes eld
\end_inset

FIRST_FOUR
\begin_inset Quotes erd
\end_inset

 to get a file name we can identify later.
 
\end_layout

\begin_layout Standard
To make the x-axis look nicer we set TC_NICER_XLABS=1 and omit_const_xlab_vars=1.
 We decided to change the first default colour, as the default dark blue
 makes the median lines inside the boxes harder to read (and as excuse to
 introduce the plot_script parameter).
 We created a slightly modified version of the default plot script named
 
\family typewriter
\size footnotesize
my_plot_cmp_experiments.R
\family default
\size default
, in which the first colour is changed from the default dark blue to a lighter
 blue (by redefining the cols array defined in plot_func.R after the point
 where plot_func.R is included).
\begin_inset Foot
status open

\begin_layout Plain Layout
Note that 
\family typewriter
\size scriptsize
my_plot_cmp_experiments.R
\family default
\size default
 includes other R scripts, such as plot_func.R.
 The included scripts also need to be copied in the same directory as 
\family typewriter
\size scriptsize
my_plot_cmp_experiments.R 
\family default
\size default
even if they are not modified.
 Alternatively, one needs to modify the include paths to point to the original
 scripts from the TEACUP distribution.
\end_layout

\end_inset

 Then we instructed TEACUP to use the modified script for plotting with
 the plot_script parameter.
 
\end_layout

\begin_layout Standard
The command used for plotting is:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\family typewriter
\size small
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
> TC_NICER_XLABS=1 fab analyse_cmpexp:exp_list= explist.txt,out_dir=../results,
 source_filter="D_172.16.11.61_80;D_172.16.11.62_81; D_172.16.11.63_82;D_172.16.11.64_83",
 metric=restime,ptype=box,omit_const_xlab_vars=1, out_name="FIRST_FOUR",plot_scr
ipt="R CMD BATCH --vanilla ./my_plot_cmp_experiments.R"
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Response-time-depending"

\end_inset

 shows the response time distribution as boxplots for the first four responders
 over all the experiments (the boxplots are the distributions of the response
 times over all burst in each experiment).
 We can see that response time is increasing with the total number of responders
 as expected, but depending on the experiment and responder there variations.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement tb
wide true
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename graphs/FIRST_FOUR_20150218-135735_experiment_restime_box_cmp_exp.pdf
	scale 85
	BoundingBox 0bp 0bp 335bp 206bp
	clip

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Response-time-depending"

\end_inset

Response time distributions for the first four responders depending on the
 number of responders
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Next, let us simply plot the response time distributions over all responders
 in each experiment.
 We specify source_filter to select all flows to the querier and instruct
 TEACUP to merge all flows in each experiment into one box instead of plotting
 a box for each flow (by setting merge_data=1).
 The other parameters used are the same as before.
\end_layout

\begin_layout Standard
The command used for plotting is:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent 
\backslash
colorbox{lightgray}{
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\family typewriter
\size small
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "98col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\size scriptsize
> TC_NICER_XLABS=1 fab analyse_cmpexp:exp_list= explist.txt,out_dir=../results,
 source_filter="S_172.16.10.60_*",merge_data=1, metric=restime,ptype=box,omit_const
_xlab_vars=1, out_name="ALL",plot_script="R CMD BATCH --vanilla ./my_plot_cmp_exp
eriments.R" 
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Response-time-depending-1"

\end_inset

 shows the response time distributions as boxplots, where each box shows
 the distribution of response times over all bursts of all responders in
 each experiment.
 The figures shows that response time is increasing with an increasing number
 of responders as expected.
 It also shows that the variance of the response times increases with an
 increasing number of responders.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement tb
wide true
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename graphs/ALL_20150218-135735_experiment_restime_box_cmp_exp.pdf
	scale 85
	BoundingBox 0bp 0bp 335bp 208bp
	clip

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Response-time-depending-1"

\end_inset

Response time distributions for all responders depending on the number of
 responders
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Conclusions and Future Work
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sec:Conclusions"

\end_inset


\end_layout

\begin_layout Standard
TEACUP is a Python-based software tool we developed to run automated TCP
 performance tests in a controlled testbed 
\begin_inset CommandInset citation
LatexCommand cite
key "zander2015caia_teacup_v1.0"

\end_inset

.
 In this report we described TEACUP's functionality to extract statistics
 and plot graphs based on data collected during the experiments.
\end_layout

\begin_layout Section*
Acknowledgements
\end_layout

\begin_layout Standard
TEACUP versions prior to 1.0 were developed as part of a project funded by
 Cisco Systems and titled "Study in TCP Congestion Control Performance In
 A Data Centre".
 This was a collaborative effort between Swinburne University of Technology's
 Center for Advanced Internet Archectures and Fred Baker of Cisco Systems.
 These may be found at 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://caia.swin.edu.au/tools/teacup/downloads.html
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Starting with TEACUP v1.0, development will be community supported and publicly
 hosted at 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://sourceforge.net/projects/teacup/
\end_layout

\end_inset

.
\end_layout

\begin_layout Section*
Copyright and License
\begin_inset CommandInset label
LatexCommand label
name "sec:Copying"

\end_inset


\end_layout

\begin_layout Standard
This document, 
\begin_inset Quotes eld
\end_inset

TEACUP v1.0 -- Data Analysis Functions
\begin_inset Quotes erd
\end_inset

 by Sebastian Zander and Grenville Armitage, is 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
copyright
\end_layout

\end_inset


\begin_inset space ~
\end_inset

2015 -- 2016 CAIA, Swinburne University of Technology.
 As of June 2016 this document has been licensed under a Creative Commons
 Attribution-ShareAlike 4.0 International License (CC BY-SA 4.0, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://creativecommons.org/licenses/by-sa/4.0
\end_layout

\end_inset

).
 Based on a work at 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://caia.swin.edu.au/reports/150529B/CAIA-TR-150529B.pdf
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
balance
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "teacup-analysis"
options "IEEEtran"

\end_inset


\end_layout

\end_body
\end_document
